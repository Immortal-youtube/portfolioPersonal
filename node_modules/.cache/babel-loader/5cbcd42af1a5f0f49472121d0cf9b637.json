{"ast":null,"code":"const p = \"required\",\n      q = \"fn\",\n      r = \"argv\",\n      s = \"ref\";\nconst a = \"PartitionResult\",\n      b = \"tree\",\n      c = \"error\",\n      d = \"endpoint\",\n      e = {\n  [p]: false,\n  \"type\": \"String\"\n},\n      f = {\n  [p]: true,\n  \"default\": false,\n  \"type\": \"Boolean\"\n},\n      g = {\n  [s]: \"Endpoint\"\n},\n      h = {\n  [q]: \"booleanEquals\",\n  [r]: [{\n    [s]: \"UseFIPS\"\n  }, true]\n},\n      i = {\n  [q]: \"booleanEquals\",\n  [r]: [{\n    [s]: \"UseDualStack\"\n  }, true]\n},\n      j = {},\n      k = {\n  [q]: \"booleanEquals\",\n  [r]: [true, {\n    [q]: \"getAttr\",\n    [r]: [{\n      [s]: a\n    }, \"supportsFIPS\"]\n  }]\n},\n      l = {\n  [q]: \"booleanEquals\",\n  [r]: [true, {\n    [q]: \"getAttr\",\n    [r]: [{\n      [s]: a\n    }, \"supportsDualStack\"]\n  }]\n},\n      m = [g],\n      n = [h],\n      o = [i];\nconst _data = {\n  version: \"1.0\",\n  parameters: {\n    Region: e,\n    UseDualStack: f,\n    UseFIPS: f,\n    Endpoint: e\n  },\n  rules: [{\n    conditions: [{\n      [q]: \"aws.partition\",\n      [r]: [{\n        [s]: \"Region\"\n      }],\n      assign: a\n    }],\n    type: b,\n    rules: [{\n      conditions: [{\n        [q]: \"isSet\",\n        [r]: m\n      }, {\n        [q]: \"parseURL\",\n        [r]: m,\n        assign: \"url\"\n      }],\n      type: b,\n      rules: [{\n        conditions: n,\n        error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n        type: c\n      }, {\n        type: b,\n        rules: [{\n          conditions: o,\n          error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n          type: c\n        }, {\n          endpoint: {\n            url: g,\n            properties: j,\n            headers: j\n          },\n          type: d\n        }]\n      }]\n    }, {\n      conditions: [h, i],\n      type: b,\n      rules: [{\n        conditions: [k, l],\n        type: b,\n        rules: [{\n          endpoint: {\n            url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n            properties: j,\n            headers: j\n          },\n          type: d\n        }]\n      }, {\n        error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n        type: c\n      }]\n    }, {\n      conditions: n,\n      type: b,\n      rules: [{\n        conditions: [k],\n        type: b,\n        rules: [{\n          type: b,\n          rules: [{\n            endpoint: {\n              url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\",\n              properties: j,\n              headers: j\n            },\n            type: d\n          }]\n        }]\n      }, {\n        error: \"FIPS is enabled but this partition does not support FIPS\",\n        type: c\n      }]\n    }, {\n      conditions: o,\n      type: b,\n      rules: [{\n        conditions: [l],\n        type: b,\n        rules: [{\n          endpoint: {\n            url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n            properties: j,\n            headers: j\n          },\n          type: d\n        }]\n      }, {\n        error: \"DualStack is enabled but this partition does not support DualStack\",\n        type: c\n      }]\n    }, {\n      endpoint: {\n        url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\",\n        properties: j,\n        headers: j\n      },\n      type: d\n    }]\n  }]\n};\nexport const ruleSet = _data;","map":{"version":3,"names":["p","q","r","s","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","_data","version","parameters","Region","UseDualStack","UseFIPS","Endpoint","rules","conditions","assign","type","error","endpoint","url","properties","headers","ruleSet"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/ruleset.js"],"sourcesContent":["const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n"],"mappings":"AAAA,MAAMA,CAAC,GAAG,UAAV;AAAA,MAAsBC,CAAC,GAAG,IAA1B;AAAA,MAAgCC,CAAC,GAAG,MAApC;AAAA,MAA4CC,CAAC,GAAG,KAAhD;AACA,MAAMC,CAAC,GAAG,iBAAV;AAAA,MAA6BC,CAAC,GAAG,MAAjC;AAAA,MAAyCC,CAAC,GAAG,OAA7C;AAAA,MAAsDC,CAAC,GAAG,UAA1D;AAAA,MAAsEC,CAAC,GAAG;EAAE,CAACR,CAAD,GAAK,KAAP;EAAc,QAAQ;AAAtB,CAA1E;AAAA,MAA4GS,CAAC,GAAG;EAAE,CAACT,CAAD,GAAK,IAAP;EAAa,WAAW,KAAxB;EAA+B,QAAQ;AAAvC,CAAhH;AAAA,MAAoKU,CAAC,GAAG;EAAE,CAACP,CAAD,GAAK;AAAP,CAAxK;AAAA,MAA6LQ,CAAC,GAAG;EAAE,CAACV,CAAD,GAAK,eAAP;EAAwB,CAACC,CAAD,GAAK,CAAC;IAAE,CAACC,CAAD,GAAK;EAAP,CAAD,EAAqB,IAArB;AAA7B,CAAjM;AAAA,MAA4PS,CAAC,GAAG;EAAE,CAACX,CAAD,GAAK,eAAP;EAAwB,CAACC,CAAD,GAAK,CAAC;IAAE,CAACC,CAAD,GAAK;EAAP,CAAD,EAA0B,IAA1B;AAA7B,CAAhQ;AAAA,MAAgUU,CAAC,GAAG,EAApU;AAAA,MAAwUC,CAAC,GAAG;EAAE,CAACb,CAAD,GAAK,eAAP;EAAwB,CAACC,CAAD,GAAK,CAAC,IAAD,EAAO;IAAE,CAACD,CAAD,GAAK,SAAP;IAAkB,CAACC,CAAD,GAAK,CAAC;MAAE,CAACC,CAAD,GAAKC;IAAP,CAAD,EAAa,cAAb;EAAvB,CAAP;AAA7B,CAA5U;AAAA,MAA0aW,CAAC,GAAG;EAAE,CAACd,CAAD,GAAK,eAAP;EAAwB,CAACC,CAAD,GAAK,CAAC,IAAD,EAAO;IAAE,CAACD,CAAD,GAAK,SAAP;IAAkB,CAACC,CAAD,GAAK,CAAC;MAAE,CAACC,CAAD,GAAKC;IAAP,CAAD,EAAa,mBAAb;EAAvB,CAAP;AAA7B,CAA9a;AAAA,MAAihBY,CAAC,GAAG,CAACN,CAAD,CAArhB;AAAA,MAA0hBO,CAAC,GAAG,CAACN,CAAD,CAA9hB;AAAA,MAAmiBO,CAAC,GAAG,CAACN,CAAD,CAAviB;AACA,MAAMO,KAAK,GAAG;EAAEC,OAAO,EAAE,KAAX;EAAkBC,UAAU,EAAE;IAAEC,MAAM,EAAEd,CAAV;IAAae,YAAY,EAAEd,CAA3B;IAA8Be,OAAO,EAAEf,CAAvC;IAA0CgB,QAAQ,EAAEjB;EAApD,CAA9B;EAAuFkB,KAAK,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC;MAAE,CAAC1B,CAAD,GAAK,eAAP;MAAwB,CAACC,CAAD,GAAK,CAAC;QAAE,CAACC,CAAD,GAAK;MAAP,CAAD,CAA7B;MAAkDyB,MAAM,EAAExB;IAA1D,CAAD,CAAd;IAA+EyB,IAAI,EAAExB,CAArF;IAAwFqB,KAAK,EAAE,CAAC;MAAEC,UAAU,EAAE,CAAC;QAAE,CAAC1B,CAAD,GAAK,OAAP;QAAgB,CAACC,CAAD,GAAKc;MAArB,CAAD,EAA2B;QAAE,CAACf,CAAD,GAAK,UAAP;QAAmB,CAACC,CAAD,GAAKc,CAAxB;QAA2BY,MAAM,EAAE;MAAnC,CAA3B,CAAd;MAAsFC,IAAI,EAAExB,CAA5F;MAA+FqB,KAAK,EAAE,CAAC;QAAEC,UAAU,EAAEV,CAAd;QAAiBa,KAAK,EAAE,mEAAxB;QAA6FD,IAAI,EAAEvB;MAAnG,CAAD,EAAyG;QAAEuB,IAAI,EAAExB,CAAR;QAAWqB,KAAK,EAAE,CAAC;UAAEC,UAAU,EAAET,CAAd;UAAiBY,KAAK,EAAE,wEAAxB;UAAkGD,IAAI,EAAEvB;QAAxG,CAAD,EAA8G;UAAEyB,QAAQ,EAAE;YAAEC,GAAG,EAAEtB,CAAP;YAAUuB,UAAU,EAAEpB,CAAtB;YAAyBqB,OAAO,EAAErB;UAAlC,CAAZ;UAAmDgB,IAAI,EAAEtB;QAAzD,CAA9G;MAAlB,CAAzG;IAAtG,CAAD,EAAoZ;MAAEoB,UAAU,EAAE,CAAChB,CAAD,EAAIC,CAAJ,CAAd;MAAsBiB,IAAI,EAAExB,CAA5B;MAA+BqB,KAAK,EAAE,CAAC;QAAEC,UAAU,EAAE,CAACb,CAAD,EAAIC,CAAJ,CAAd;QAAsBc,IAAI,EAAExB,CAA5B;QAA+BqB,KAAK,EAAE,CAAC;UAAEK,QAAQ,EAAE;YAAEC,GAAG,EAAE,6EAAP;YAAsFC,UAAU,EAAEpB,CAAlG;YAAqGqB,OAAO,EAAErB;UAA9G,CAAZ;UAA+HgB,IAAI,EAAEtB;QAArI,CAAD;MAAtC,CAAD,EAAqL;QAAEuB,KAAK,EAAE,iFAAT;QAA4FD,IAAI,EAAEvB;MAAlG,CAArL;IAAtC,CAApZ,EAAytB;MAAEqB,UAAU,EAAEV,CAAd;MAAiBY,IAAI,EAAExB,CAAvB;MAA0BqB,KAAK,EAAE,CAAC;QAAEC,UAAU,EAAE,CAACb,CAAD,CAAd;QAAmBe,IAAI,EAAExB,CAAzB;QAA4BqB,KAAK,EAAE,CAAC;UAAEG,IAAI,EAAExB,CAAR;UAAWqB,KAAK,EAAE,CAAC;YAAEK,QAAQ,EAAE;cAAEC,GAAG,EAAE,oEAAP;cAA6EC,UAAU,EAAEpB,CAAzF;cAA4FqB,OAAO,EAAErB;YAArG,CAAZ;YAAsHgB,IAAI,EAAEtB;UAA5H,CAAD;QAAlB,CAAD;MAAnC,CAAD,EAA+L;QAAEuB,KAAK,EAAE,0DAAT;QAAqED,IAAI,EAAEvB;MAA3E,CAA/L;IAAjC,CAAztB,EAA4gC;MAAEqB,UAAU,EAAET,CAAd;MAAiBW,IAAI,EAAExB,CAAvB;MAA0BqB,KAAK,EAAE,CAAC;QAAEC,UAAU,EAAE,CAACZ,CAAD,CAAd;QAAmBc,IAAI,EAAExB,CAAzB;QAA4BqB,KAAK,EAAE,CAAC;UAAEK,QAAQ,EAAE;YAAEC,GAAG,EAAE,wEAAP;YAAiFC,UAAU,EAAEpB,CAA7F;YAAgGqB,OAAO,EAAErB;UAAzG,CAAZ;UAA0HgB,IAAI,EAAEtB;QAAhI,CAAD;MAAnC,CAAD,EAA6K;QAAEuB,KAAK,EAAE,oEAAT;QAA+ED,IAAI,EAAEvB;MAArF,CAA7K;IAAjC,CAA5gC,EAAuzC;MAAEyB,QAAQ,EAAE;QAAEC,GAAG,EAAE,+DAAP;QAAwEC,UAAU,EAAEpB,CAApF;QAAuFqB,OAAO,EAAErB;MAAhG,CAAZ;MAAiHgB,IAAI,EAAEtB;IAAvH,CAAvzC;EAA/F,CAAD;AAA9F,CAAd;AACA,OAAO,MAAM4B,OAAO,GAAGhB,KAAhB"},"metadata":{},"sourceType":"module"}