{"ast":null,"code":"import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async (_ref, hashConstructor) => {\n  let {\n    headers,\n    body\n  } = _ref;\n\n  for (const headerName of Object.keys(headers)) {\n    if (headerName.toLowerCase() === SHA256_HEADER) {\n      return headers[headerName];\n    }\n  }\n\n  if (body == undefined) {\n    return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n  } else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n    const hashCtor = new hashConstructor();\n    hashCtor.update(toUint8Array(body));\n    return toHex(await hashCtor.digest());\n  }\n\n  return UNSIGNED_PAYLOAD;\n};","map":{"version":3,"names":["isArrayBuffer","toHex","toUint8Array","SHA256_HEADER","UNSIGNED_PAYLOAD","getPayloadHash","hashConstructor","headers","body","headerName","Object","keys","toLowerCase","undefined","ArrayBuffer","isView","hashCtor","update","digest"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/signature-v4/dist-es/getPayloadHash.js"],"sourcesContent":["import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,aAAhD;AACA,OAAO,MAAMC,cAAc,GAAG,aAA0BC,eAA1B,KAA8C;EAAA,IAAvC;IAAEC,OAAF;IAAWC;EAAX,CAAuC;;EACxE,KAAK,MAAMC,UAAX,IAAyBC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAzB,EAA+C;IAC3C,IAAIE,UAAU,CAACG,WAAX,OAA6BT,aAAjC,EAAgD;MAC5C,OAAOI,OAAO,CAACE,UAAD,CAAd;IACH;EACJ;;EACD,IAAID,IAAI,IAAIK,SAAZ,EAAuB;IACnB,OAAO,kEAAP;EACH,CAFD,MAGK,IAAI,OAAOL,IAAP,KAAgB,QAAhB,IAA4BM,WAAW,CAACC,MAAZ,CAAmBP,IAAnB,CAA5B,IAAwDR,aAAa,CAACQ,IAAD,CAAzE,EAAiF;IAClF,MAAMQ,QAAQ,GAAG,IAAIV,eAAJ,EAAjB;IACAU,QAAQ,CAACC,MAAT,CAAgBf,YAAY,CAACM,IAAD,CAA5B;IACA,OAAOP,KAAK,CAAC,MAAMe,QAAQ,CAACE,MAAT,EAAP,CAAZ;EACH;;EACD,OAAOd,gBAAP;AACH,CAfM"},"metadata":{},"sourceType":"module"}