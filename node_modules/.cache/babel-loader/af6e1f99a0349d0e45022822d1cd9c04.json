{"ast":null,"code":"import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n  for (const rule of rules) {\n    if (rule.type === \"endpoint\") {\n      const endpointOrUndefined = evaluateEndpointRule(rule, options);\n\n      if (endpointOrUndefined) {\n        return endpointOrUndefined;\n      }\n    } else if (rule.type === \"error\") {\n      evaluateErrorRule(rule, options);\n    } else if (rule.type === \"tree\") {\n      const endpointOrUndefined = evaluateTreeRule(rule, options);\n\n      if (endpointOrUndefined) {\n        return endpointOrUndefined;\n      }\n    } else {\n      throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n    }\n  }\n\n  throw new EndpointError(`Rules evaluation failed`);\n};","map":{"version":3,"names":["EndpointError","evaluateEndpointRule","evaluateErrorRule","evaluateTreeRule","evaluateRules","rules","options","rule","type","endpointOrUndefined"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateRules.js"],"sourcesContent":["import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;EAC7C,KAAK,MAAMC,IAAX,IAAmBF,KAAnB,EAA0B;IACtB,IAAIE,IAAI,CAACC,IAAL,KAAc,UAAlB,EAA8B;MAC1B,MAAMC,mBAAmB,GAAGR,oBAAoB,CAACM,IAAD,EAAOD,OAAP,CAAhD;;MACA,IAAIG,mBAAJ,EAAyB;QACrB,OAAOA,mBAAP;MACH;IACJ,CALD,MAMK,IAAIF,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;MAC5BN,iBAAiB,CAACK,IAAD,EAAOD,OAAP,CAAjB;IACH,CAFI,MAGA,IAAIC,IAAI,CAACC,IAAL,KAAc,MAAlB,EAA0B;MAC3B,MAAMC,mBAAmB,GAAGN,gBAAgB,CAACI,IAAD,EAAOD,OAAP,CAA5C;;MACA,IAAIG,mBAAJ,EAAyB;QACrB,OAAOA,mBAAP;MACH;IACJ,CALI,MAMA;MACD,MAAM,IAAIT,aAAJ,CAAmB,0BAAyBO,IAAK,EAAjD,CAAN;IACH;EACJ;;EACD,MAAM,IAAIP,aAAJ,CAAmB,yBAAnB,CAAN;AACH,CAtBM"},"metadata":{},"sourceType":"module"}