{"ast":null,"code":"import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = _ref => {\n  let {\n    query = {}\n  } = _ref;\n  const keys = [];\n  const serialized = {};\n\n  for (const key of Object.keys(query).sort()) {\n    if (key.toLowerCase() === SIGNATURE_HEADER) {\n      continue;\n    }\n\n    keys.push(key);\n    const value = query[key];\n\n    if (typeof value === \"string\") {\n      serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n    } else if (Array.isArray(value)) {\n      serialized[key] = value.slice(0).sort().reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), []).join(\"&\");\n    }\n  }\n\n  return keys.map(key => serialized[key]).filter(serialized => serialized).join(\"&\");\n};","map":{"version":3,"names":["escapeUri","SIGNATURE_HEADER","getCanonicalQuery","query","keys","serialized","key","Object","sort","toLowerCase","push","value","Array","isArray","slice","reduce","encoded","concat","join","map","filter"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalQuery.js"],"sourcesContent":["import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAO,MAAMC,iBAAiB,GAAG,QAAoB;EAAA,IAAnB;IAAEC,KAAK,GAAG;EAAV,CAAmB;EACjD,MAAMC,IAAI,GAAG,EAAb;EACA,MAAMC,UAAU,GAAG,EAAnB;;EACA,KAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACH,IAAP,CAAYD,KAAZ,EAAmBK,IAAnB,EAAlB,EAA6C;IACzC,IAAIF,GAAG,CAACG,WAAJ,OAAsBR,gBAA1B,EAA4C;MACxC;IACH;;IACDG,IAAI,CAACM,IAAL,CAAUJ,GAAV;IACA,MAAMK,KAAK,GAAGR,KAAK,CAACG,GAAD,CAAnB;;IACA,IAAI,OAAOK,KAAP,KAAiB,QAArB,EAA+B;MAC3BN,UAAU,CAACC,GAAD,CAAV,GAAmB,GAAEN,SAAS,CAACM,GAAD,CAAM,IAAGN,SAAS,CAACW,KAAD,CAAQ,EAAxD;IACH,CAFD,MAGK,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;MAC3BN,UAAU,CAACC,GAAD,CAAV,GAAkBK,KAAK,CAClBG,KADa,CACP,CADO,EAEbN,IAFa,GAGbO,MAHa,CAGN,CAACC,OAAD,EAAUL,KAAV,KAAoBK,OAAO,CAACC,MAAR,CAAe,CAAE,GAAEjB,SAAS,CAACM,GAAD,CAAM,IAAGN,SAAS,CAACW,KAAD,CAAQ,EAAvC,CAAf,CAHd,EAGyE,EAHzE,EAIbO,IAJa,CAIR,GAJQ,CAAlB;IAKH;EACJ;;EACD,OAAOd,IAAI,CACNe,GADE,CACGb,GAAD,IAASD,UAAU,CAACC,GAAD,CADrB,EAEFc,MAFE,CAEMf,UAAD,IAAgBA,UAFrB,EAGFa,IAHE,CAGG,GAHH,CAAP;AAIH,CAxBM"},"metadata":{},"sourceType":"module"}