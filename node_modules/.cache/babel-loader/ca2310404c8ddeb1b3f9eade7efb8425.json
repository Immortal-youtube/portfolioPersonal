{"ast":null,"code":"import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromWebToken = init => () => {\n  const {\n    roleArn,\n    roleSessionName,\n    webIdentityToken,\n    providerId,\n    policyArns,\n    policy,\n    durationSeconds,\n    roleAssumerWithWebIdentity\n  } = init;\n\n  if (!roleAssumerWithWebIdentity) {\n    throw new CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` + ` but no role assumption callback was provided.`, false);\n  }\n\n  return roleAssumerWithWebIdentity({\n    RoleArn: roleArn,\n    RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n    WebIdentityToken: webIdentityToken,\n    ProviderId: providerId,\n    PolicyArns: policyArns,\n    Policy: policy,\n    DurationSeconds: durationSeconds\n  });\n};","map":{"version":3,"names":["CredentialsProviderError","fromWebToken","init","roleArn","roleSessionName","webIdentityToken","providerId","policyArns","policy","durationSeconds","roleAssumerWithWebIdentity","RoleArn","RoleSessionName","Date","now","WebIdentityToken","ProviderId","PolicyArns","Policy","DurationSeconds"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js"],"sourcesContent":["import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,4BAAzC;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU,MAAM;EACxC,MAAM;IAAEC,OAAF;IAAWC,eAAX;IAA4BC,gBAA5B;IAA8CC,UAA9C;IAA0DC,UAA1D;IAAsEC,MAAtE;IAA8EC,eAA9E;IAA+FC;EAA/F,IAA+HR,IAArI;;EACA,IAAI,CAACQ,0BAAL,EAAiC;IAC7B,MAAM,IAAIV,wBAAJ,CAA8B,aAAYG,OAAQ,0CAArB,GAC9B,gDADC,EACgD,KADhD,CAAN;EAEH;;EACD,OAAOO,0BAA0B,CAAC;IAC9BC,OAAO,EAAER,OADqB;IAE9BS,eAAe,EAAER,eAAe,IAAK,sBAAqBS,IAAI,CAACC,GAAL,EAAW,EAFvC;IAG9BC,gBAAgB,EAAEV,gBAHY;IAI9BW,UAAU,EAAEV,UAJkB;IAK9BW,UAAU,EAAEV,UALkB;IAM9BW,MAAM,EAAEV,MANsB;IAO9BW,eAAe,EAAEV;EAPa,CAAD,CAAjC;AASH,CAfM"},"metadata":{},"sourceType":"module"}