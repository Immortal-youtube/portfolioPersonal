{"ast":null,"code":"import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, throwDefaultError } from \"@aws-sdk/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"../models/CognitoIdentityServiceException\";\nimport { ConcurrentModificationException, DeveloperUserAlreadyRegisteredException, ExternalServiceException, InternalErrorException, InvalidIdentityPoolConfigurationException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, ResourceNotFoundException, TooManyRequestsException } from \"../models/models_0\";\nexport const serializeAws_json1_1CreateIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.CreateIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetCredentialsForIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetCredentialsForIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetId\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdentityPoolRolesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetIdentityPoolRoles\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdToken\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetPrincipalTagAttributeMap\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetPrincipalTagAttributeMapInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentityPoolsCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentityPools\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListTagsForResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListTagsForResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1LookupDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.LookupDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1MergeDeveloperIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.MergeDeveloperIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetIdentityPoolRolesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.SetIdentityPoolRoles\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.SetPrincipalTagAttributeMap\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1SetPrincipalTagAttributeMapInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1TagResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.TagResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UntagResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UntagResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UpdateIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UpdateIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const deserializeAws_json1_1CreateIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateIdentityPoolCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1DeleteIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentitiesCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1DeleteIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context);\n  }\n\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1DescribeIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityDescription(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeIdentityCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1DescribeIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1GetCredentialsForIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetCredentialsForIdentityCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidIdentityPoolConfigurationException\":\n    case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n      throw await deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1GetIdCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetIdResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetIdCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1GetIdentityPoolRolesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetIdentityPoolRolesCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1GetOpenIdTokenCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"DeveloperUserAlreadyRegisteredException\":\n    case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n      throw await deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context);\n\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetPrincipalTagAttributeMapResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1ListIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentitiesCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1ListIdentityPoolsCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentityPoolsCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListIdentityPoolsCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1ListTagsForResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsForResourceCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsForResourceCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1LookupDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1LookupDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1MergeDeveloperIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1MergeDeveloperIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1SetIdentityPoolRolesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context);\n  }\n\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SetIdentityPoolRolesCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1SetPrincipalTagAttributeMapResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1TagResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TagResourceCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1TagResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TagResourceCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1UnlinkDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context);\n  }\n\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UnlinkDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1UnlinkIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkIdentityCommandError(output, context);\n  }\n\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UnlinkIdentityCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1UntagResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UntagResourceCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UntagResourceCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nexport const deserializeAws_json1_1UpdateIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context);\n  }\n\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = { ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\n\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n  const exception = new ConcurrentModificationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);\n  const exception = new DeveloperUserAlreadyRegisteredException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1ExternalServiceExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ExternalServiceException(body, context);\n  const exception = new ExternalServiceException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1InternalErrorExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InternalErrorException(body, context);\n  const exception = new InternalErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);\n  const exception = new InvalidIdentityPoolConfigurationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n  const exception = new InvalidParameterException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n  const exception = new LimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1NotAuthorizedExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1NotAuthorizedException(body, context);\n  const exception = new NotAuthorizedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1ResourceConflictExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ResourceConflictException(body, context);\n  const exception = new ResourceConflictException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const exception = new ResourceNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n  const exception = new TooManyRequestsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\n\nconst serializeAws_json1_1CognitoIdentityProvider = (input, context) => {\n  return { ...(input.ClientId != null && {\n      ClientId: input.ClientId\n    }),\n    ...(input.ProviderName != null && {\n      ProviderName: input.ProviderName\n    }),\n    ...(input.ServerSideTokenCheck != null && {\n      ServerSideTokenCheck: input.ServerSideTokenCheck\n    })\n  };\n};\n\nconst serializeAws_json1_1CognitoIdentityProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return serializeAws_json1_1CognitoIdentityProvider(entry, context);\n  });\n};\n\nconst serializeAws_json1_1CreateIdentityPoolInput = (input, context) => {\n  return { ...(input.AllowClassicFlow != null && {\n      AllowClassicFlow: input.AllowClassicFlow\n    }),\n    ...(input.AllowUnauthenticatedIdentities != null && {\n      AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities\n    }),\n    ...(input.CognitoIdentityProviders != null && {\n      CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context)\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolName != null && {\n      IdentityPoolName: input.IdentityPoolName\n    }),\n    ...(input.IdentityPoolTags != null && {\n      IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context)\n    }),\n    ...(input.OpenIdConnectProviderARNs != null && {\n      OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context)\n    }),\n    ...(input.SamlProviderARNs != null && {\n      SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context)\n    }),\n    ...(input.SupportedLoginProviders != null && {\n      SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1DeleteIdentitiesInput = (input, context) => {\n  return { ...(input.IdentityIdsToDelete != null && {\n      IdentityIdsToDelete: serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1DeleteIdentityPoolInput = (input, context) => {\n  return { ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\n\nconst serializeAws_json1_1DescribeIdentityInput = (input, context) => {\n  return { ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    })\n  };\n};\n\nconst serializeAws_json1_1DescribeIdentityPoolInput = (input, context) => {\n  return { ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\n\nconst serializeAws_json1_1GetCredentialsForIdentityInput = (input, context) => {\n  return { ...(input.CustomRoleArn != null && {\n      CustomRoleArn: input.CustomRoleArn\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1GetIdentityPoolRolesInput = (input, context) => {\n  return { ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\n\nconst serializeAws_json1_1GetIdInput = (input, context) => {\n  return { ...(input.AccountId != null && {\n      AccountId: input.AccountId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = (input, context) => {\n  return { ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    }),\n    ...(input.PrincipalTags != null && {\n      PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context)\n    }),\n    ...(input.TokenDuration != null && {\n      TokenDuration: input.TokenDuration\n    })\n  };\n};\n\nconst serializeAws_json1_1GetOpenIdTokenInput = (input, context) => {\n  return { ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1GetPrincipalTagAttributeMapInput = (input, context) => {\n  return { ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityProviderName != null && {\n      IdentityProviderName: input.IdentityProviderName\n    })\n  };\n};\n\nconst serializeAws_json1_1IdentityIdList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\n\nconst serializeAws_json1_1IdentityPool = (input, context) => {\n  return { ...(input.AllowClassicFlow != null && {\n      AllowClassicFlow: input.AllowClassicFlow\n    }),\n    ...(input.AllowUnauthenticatedIdentities != null && {\n      AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities\n    }),\n    ...(input.CognitoIdentityProviders != null && {\n      CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context)\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityPoolName != null && {\n      IdentityPoolName: input.IdentityPoolName\n    }),\n    ...(input.IdentityPoolTags != null && {\n      IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context)\n    }),\n    ...(input.OpenIdConnectProviderARNs != null && {\n      OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context)\n    }),\n    ...(input.SamlProviderARNs != null && {\n      SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context)\n    }),\n    ...(input.SupportedLoginProviders != null && {\n      SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1IdentityPoolTagsListType = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\n\nconst serializeAws_json1_1IdentityPoolTagsType = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref) => {\n    let [key, value] = _ref;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n\nconst serializeAws_json1_1IdentityProviders = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref2) => {\n    let [key, value] = _ref2;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n\nconst serializeAws_json1_1ListIdentitiesInput = (input, context) => {\n  return { ...(input.HideDisabled != null && {\n      HideDisabled: input.HideDisabled\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\n\nconst serializeAws_json1_1ListIdentityPoolsInput = (input, context) => {\n  return { ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\n\nconst serializeAws_json1_1ListTagsForResourceInput = (input, context) => {\n  return { ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    })\n  };\n};\n\nconst serializeAws_json1_1LoginsList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\n\nconst serializeAws_json1_1LoginsMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref3) => {\n    let [key, value] = _ref3;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n\nconst serializeAws_json1_1LookupDeveloperIdentityInput = (input, context) => {\n  return { ...(input.DeveloperUserIdentifier != null && {\n      DeveloperUserIdentifier: input.DeveloperUserIdentifier\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\n\nconst serializeAws_json1_1MappingRule = (input, context) => {\n  return { ...(input.Claim != null && {\n      Claim: input.Claim\n    }),\n    ...(input.MatchType != null && {\n      MatchType: input.MatchType\n    }),\n    ...(input.RoleARN != null && {\n      RoleARN: input.RoleARN\n    }),\n    ...(input.Value != null && {\n      Value: input.Value\n    })\n  };\n};\n\nconst serializeAws_json1_1MappingRulesList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return serializeAws_json1_1MappingRule(entry, context);\n  });\n};\n\nconst serializeAws_json1_1MergeDeveloperIdentitiesInput = (input, context) => {\n  return { ...(input.DestinationUserIdentifier != null && {\n      DestinationUserIdentifier: input.DestinationUserIdentifier\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.SourceUserIdentifier != null && {\n      SourceUserIdentifier: input.SourceUserIdentifier\n    })\n  };\n};\n\nconst serializeAws_json1_1OIDCProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\n\nconst serializeAws_json1_1PrincipalTags = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref4) => {\n    let [key, value] = _ref4;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n\nconst serializeAws_json1_1RoleMapping = (input, context) => {\n  return { ...(input.AmbiguousRoleResolution != null && {\n      AmbiguousRoleResolution: input.AmbiguousRoleResolution\n    }),\n    ...(input.RulesConfiguration != null && {\n      RulesConfiguration: serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context)\n    }),\n    ...(input.Type != null && {\n      Type: input.Type\n    })\n  };\n};\n\nconst serializeAws_json1_1RoleMappingMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref5) => {\n    let [key, value] = _ref5;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = serializeAws_json1_1RoleMapping(value, context);\n    return acc;\n  }, {});\n};\n\nconst serializeAws_json1_1RolesMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref6) => {\n    let [key, value] = _ref6;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n\nconst serializeAws_json1_1RulesConfigurationType = (input, context) => {\n  return { ...(input.Rules != null && {\n      Rules: serializeAws_json1_1MappingRulesList(input.Rules, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1SAMLProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\n\nconst serializeAws_json1_1SetIdentityPoolRolesInput = (input, context) => {\n  return { ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.RoleMappings != null && {\n      RoleMappings: serializeAws_json1_1RoleMappingMap(input.RoleMappings, context)\n    }),\n    ...(input.Roles != null && {\n      Roles: serializeAws_json1_1RolesMap(input.Roles, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1SetPrincipalTagAttributeMapInput = (input, context) => {\n  return { ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityProviderName != null && {\n      IdentityProviderName: input.IdentityProviderName\n    }),\n    ...(input.PrincipalTags != null && {\n      PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context)\n    }),\n    ...(input.UseDefaults != null && {\n      UseDefaults: input.UseDefaults\n    })\n  };\n};\n\nconst serializeAws_json1_1TagResourceInput = (input, context) => {\n  return { ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    }),\n    ...(input.Tags != null && {\n      Tags: serializeAws_json1_1IdentityPoolTagsType(input.Tags, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1UnlinkDeveloperIdentityInput = (input, context) => {\n  return { ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.DeveloperUserIdentifier != null && {\n      DeveloperUserIdentifier: input.DeveloperUserIdentifier\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\n\nconst serializeAws_json1_1UnlinkIdentityInput = (input, context) => {\n  return { ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    }),\n    ...(input.LoginsToRemove != null && {\n      LoginsToRemove: serializeAws_json1_1LoginsList(input.LoginsToRemove, context)\n    })\n  };\n};\n\nconst serializeAws_json1_1UntagResourceInput = (input, context) => {\n  return { ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    }),\n    ...(input.TagKeys != null && {\n      TagKeys: serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context)\n    })\n  };\n};\n\nconst deserializeAws_json1_1CognitoIdentityProvider = (output, context) => {\n  return {\n    ClientId: __expectString(output.ClientId),\n    ProviderName: __expectString(output.ProviderName),\n    ServerSideTokenCheck: __expectBoolean(output.ServerSideTokenCheck)\n  };\n};\n\nconst deserializeAws_json1_1CognitoIdentityProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1CognitoIdentityProvider(entry, context);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1ConcurrentModificationException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1Credentials = (output, context) => {\n  return {\n    AccessKeyId: __expectString(output.AccessKeyId),\n    Expiration: output.Expiration != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.Expiration))) : undefined,\n    SecretKey: __expectString(output.SecretKey),\n    SessionToken: __expectString(output.SessionToken)\n  };\n};\n\nconst deserializeAws_json1_1DeleteIdentitiesResponse = (output, context) => {\n  return {\n    UnprocessedIdentityIds: output.UnprocessedIdentityIds != null ? deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context) : undefined\n  };\n};\n\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1DeveloperUserIdentifierList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1ExternalServiceException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1GetCredentialsForIdentityResponse = (output, context) => {\n  return {\n    Credentials: output.Credentials != null ? deserializeAws_json1_1Credentials(output.Credentials, context) : undefined,\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\n\nconst deserializeAws_json1_1GetIdentityPoolRolesResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    RoleMappings: output.RoleMappings != null ? deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context) : undefined,\n    Roles: output.Roles != null ? deserializeAws_json1_1RolesMap(output.Roles, context) : undefined\n  };\n};\n\nconst deserializeAws_json1_1GetIdResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId),\n    Token: __expectString(output.Token)\n  };\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId),\n    Token: __expectString(output.Token)\n  };\n};\n\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityProviderName: __expectString(output.IdentityProviderName),\n    PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n    UseDefaults: __expectBoolean(output.UseDefaults)\n  };\n};\n\nconst deserializeAws_json1_1IdentitiesList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1IdentityDescription(entry, context);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1IdentityDescription = (output, context) => {\n  return {\n    CreationDate: output.CreationDate != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationDate))) : undefined,\n    IdentityId: __expectString(output.IdentityId),\n    LastModifiedDate: output.LastModifiedDate != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedDate))) : undefined,\n    Logins: output.Logins != null ? deserializeAws_json1_1LoginsList(output.Logins, context) : undefined\n  };\n};\n\nconst deserializeAws_json1_1IdentityPool = (output, context) => {\n  return {\n    AllowClassicFlow: __expectBoolean(output.AllowClassicFlow),\n    AllowUnauthenticatedIdentities: __expectBoolean(output.AllowUnauthenticatedIdentities),\n    CognitoIdentityProviders: output.CognitoIdentityProviders != null ? deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context) : undefined,\n    DeveloperProviderName: __expectString(output.DeveloperProviderName),\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityPoolName: __expectString(output.IdentityPoolName),\n    IdentityPoolTags: output.IdentityPoolTags != null ? deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context) : undefined,\n    OpenIdConnectProviderARNs: output.OpenIdConnectProviderARNs != null ? deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context) : undefined,\n    SamlProviderARNs: output.SamlProviderARNs != null ? deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context) : undefined,\n    SupportedLoginProviders: output.SupportedLoginProviders != null ? deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context) : undefined\n  };\n};\n\nconst deserializeAws_json1_1IdentityPoolShortDescription = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityPoolName: __expectString(output.IdentityPoolName)\n  };\n};\n\nconst deserializeAws_json1_1IdentityPoolsList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1IdentityPoolTagsType = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref7) => {\n    let [key, value] = _ref7;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\n\nconst deserializeAws_json1_1IdentityProviders = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref8) => {\n    let [key, value] = _ref8;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\n\nconst deserializeAws_json1_1InternalErrorException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1InvalidParameterException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1ListIdentitiesResponse = (output, context) => {\n  return {\n    Identities: output.Identities != null ? deserializeAws_json1_1IdentitiesList(output.Identities, context) : undefined,\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    NextToken: __expectString(output.NextToken)\n  };\n};\n\nconst deserializeAws_json1_1ListIdentityPoolsResponse = (output, context) => {\n  return {\n    IdentityPools: output.IdentityPools != null ? deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context) : undefined,\n    NextToken: __expectString(output.NextToken)\n  };\n};\n\nconst deserializeAws_json1_1ListTagsForResourceResponse = (output, context) => {\n  return {\n    Tags: output.Tags != null ? deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context) : undefined\n  };\n};\n\nconst deserializeAws_json1_1LoginsList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1LookupDeveloperIdentityResponse = (output, context) => {\n  return {\n    DeveloperUserIdentifierList: output.DeveloperUserIdentifierList != null ? deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context) : undefined,\n    IdentityId: __expectString(output.IdentityId),\n    NextToken: __expectString(output.NextToken)\n  };\n};\n\nconst deserializeAws_json1_1MappingRule = (output, context) => {\n  return {\n    Claim: __expectString(output.Claim),\n    MatchType: __expectString(output.MatchType),\n    RoleARN: __expectString(output.RoleARN),\n    Value: __expectString(output.Value)\n  };\n};\n\nconst deserializeAws_json1_1MappingRulesList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1MappingRule(entry, context);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1MergeDeveloperIdentitiesResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\n\nconst deserializeAws_json1_1NotAuthorizedException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1OIDCProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1PrincipalTags = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref9) => {\n    let [key, value] = _ref9;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\n\nconst deserializeAws_json1_1ResourceConflictException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1RoleMapping = (output, context) => {\n  return {\n    AmbiguousRoleResolution: __expectString(output.AmbiguousRoleResolution),\n    RulesConfiguration: output.RulesConfiguration != null ? deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context) : undefined,\n    Type: __expectString(output.Type)\n  };\n};\n\nconst deserializeAws_json1_1RoleMappingMap = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref10) => {\n    let [key, value] = _ref10;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = deserializeAws_json1_1RoleMapping(value, context);\n    return acc;\n  }, {});\n};\n\nconst deserializeAws_json1_1RolesMap = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref11) => {\n    let [key, value] = _ref11;\n\n    if (value === null) {\n      return acc;\n    }\n\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\n\nconst deserializeAws_json1_1RulesConfigurationType = (output, context) => {\n  return {\n    Rules: output.Rules != null ? deserializeAws_json1_1MappingRulesList(output.Rules, context) : undefined\n  };\n};\n\nconst deserializeAws_json1_1SAMLProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityProviderName: __expectString(output.IdentityProviderName),\n    PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n    UseDefaults: __expectBoolean(output.UseDefaults)\n  };\n};\n\nconst deserializeAws_json1_1TagResourceResponse = (output, context) => {\n  return {};\n};\n\nconst deserializeAws_json1_1TooManyRequestsException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nconst deserializeAws_json1_1UnprocessedIdentityId = (output, context) => {\n  return {\n    ErrorCode: __expectString(output.ErrorCode),\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\n\nconst deserializeAws_json1_1UnprocessedIdentityIdList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1UnprocessedIdentityId(entry, context);\n  });\n  return retVal;\n};\n\nconst deserializeAws_json1_1UntagResourceResponse = (output, context) => {\n  return {};\n};\n\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\n\nconst collectBody = function () {\n  let streamBody = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();\n  let context = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const contents = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n    headers\n  };\n\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n\n  if (body !== undefined) {\n    contents.body = body;\n  }\n\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then(encoded => {\n  if (encoded.length) {\n    return JSON.parse(encoded);\n  }\n\n  return {};\n});\n\nconst parseErrorBody = async (errorBody, context) => {\n  const value = await parseBody(errorBody, context);\n  value.message = value.message ?? value.Message;\n  return value;\n};\n\nconst loadRestJsonErrorCode = (output, data) => {\n  const findKey = (object, key) => Object.keys(object).find(k => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = rawValue => {\n    let cleanValue = rawValue;\n\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};","map":{"version":3,"names":["HttpRequest","__HttpRequest","decorateServiceException","__decorateServiceException","expectBoolean","__expectBoolean","expectNonNull","__expectNonNull","expectNumber","__expectNumber","expectString","__expectString","parseEpochTimestamp","__parseEpochTimestamp","throwDefaultError","CognitoIdentityServiceException","__BaseException","ConcurrentModificationException","DeveloperUserAlreadyRegisteredException","ExternalServiceException","InternalErrorException","InvalidIdentityPoolConfigurationException","InvalidParameterException","LimitExceededException","NotAuthorizedException","ResourceConflictException","ResourceNotFoundException","TooManyRequestsException","serializeAws_json1_1CreateIdentityPoolCommand","input","context","headers","body","JSON","stringify","serializeAws_json1_1CreateIdentityPoolInput","buildHttpRpcRequest","undefined","serializeAws_json1_1DeleteIdentitiesCommand","serializeAws_json1_1DeleteIdentitiesInput","serializeAws_json1_1DeleteIdentityPoolCommand","serializeAws_json1_1DeleteIdentityPoolInput","serializeAws_json1_1DescribeIdentityCommand","serializeAws_json1_1DescribeIdentityInput","serializeAws_json1_1DescribeIdentityPoolCommand","serializeAws_json1_1DescribeIdentityPoolInput","serializeAws_json1_1GetCredentialsForIdentityCommand","serializeAws_json1_1GetCredentialsForIdentityInput","serializeAws_json1_1GetIdCommand","serializeAws_json1_1GetIdInput","serializeAws_json1_1GetIdentityPoolRolesCommand","serializeAws_json1_1GetIdentityPoolRolesInput","serializeAws_json1_1GetOpenIdTokenCommand","serializeAws_json1_1GetOpenIdTokenInput","serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand","serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput","serializeAws_json1_1GetPrincipalTagAttributeMapCommand","serializeAws_json1_1GetPrincipalTagAttributeMapInput","serializeAws_json1_1ListIdentitiesCommand","serializeAws_json1_1ListIdentitiesInput","serializeAws_json1_1ListIdentityPoolsCommand","serializeAws_json1_1ListIdentityPoolsInput","serializeAws_json1_1ListTagsForResourceCommand","serializeAws_json1_1ListTagsForResourceInput","serializeAws_json1_1LookupDeveloperIdentityCommand","serializeAws_json1_1LookupDeveloperIdentityInput","serializeAws_json1_1MergeDeveloperIdentitiesCommand","serializeAws_json1_1MergeDeveloperIdentitiesInput","serializeAws_json1_1SetIdentityPoolRolesCommand","serializeAws_json1_1SetIdentityPoolRolesInput","serializeAws_json1_1SetPrincipalTagAttributeMapCommand","serializeAws_json1_1SetPrincipalTagAttributeMapInput","serializeAws_json1_1TagResourceCommand","serializeAws_json1_1TagResourceInput","serializeAws_json1_1UnlinkDeveloperIdentityCommand","serializeAws_json1_1UnlinkDeveloperIdentityInput","serializeAws_json1_1UnlinkIdentityCommand","serializeAws_json1_1UnlinkIdentityInput","serializeAws_json1_1UntagResourceCommand","serializeAws_json1_1UntagResourceInput","serializeAws_json1_1UpdateIdentityPoolCommand","serializeAws_json1_1IdentityPool","deserializeAws_json1_1CreateIdentityPoolCommand","output","statusCode","deserializeAws_json1_1CreateIdentityPoolCommandError","data","parseBody","contents","deserializeAws_json1_1IdentityPool","response","$metadata","deserializeMetadata","Promise","resolve","parsedOutput","parseErrorBody","errorCode","loadRestJsonErrorCode","deserializeAws_json1_1InternalErrorExceptionResponse","deserializeAws_json1_1InvalidParameterExceptionResponse","deserializeAws_json1_1LimitExceededExceptionResponse","deserializeAws_json1_1NotAuthorizedExceptionResponse","deserializeAws_json1_1ResourceConflictExceptionResponse","deserializeAws_json1_1TooManyRequestsExceptionResponse","parsedBody","exceptionCtor","deserializeAws_json1_1DeleteIdentitiesCommand","deserializeAws_json1_1DeleteIdentitiesCommandError","deserializeAws_json1_1DeleteIdentitiesResponse","deserializeAws_json1_1DeleteIdentityPoolCommand","deserializeAws_json1_1DeleteIdentityPoolCommandError","collectBody","deserializeAws_json1_1ResourceNotFoundExceptionResponse","deserializeAws_json1_1DescribeIdentityCommand","deserializeAws_json1_1DescribeIdentityCommandError","deserializeAws_json1_1IdentityDescription","deserializeAws_json1_1DescribeIdentityPoolCommand","deserializeAws_json1_1DescribeIdentityPoolCommandError","deserializeAws_json1_1GetCredentialsForIdentityCommand","deserializeAws_json1_1GetCredentialsForIdentityCommandError","deserializeAws_json1_1GetCredentialsForIdentityResponse","deserializeAws_json1_1ExternalServiceExceptionResponse","deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse","deserializeAws_json1_1GetIdCommand","deserializeAws_json1_1GetIdCommandError","deserializeAws_json1_1GetIdResponse","deserializeAws_json1_1GetIdentityPoolRolesCommand","deserializeAws_json1_1GetIdentityPoolRolesCommandError","deserializeAws_json1_1GetIdentityPoolRolesResponse","deserializeAws_json1_1GetOpenIdTokenCommand","deserializeAws_json1_1GetOpenIdTokenCommandError","deserializeAws_json1_1GetOpenIdTokenResponse","deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand","deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError","deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse","deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse","deserializeAws_json1_1GetPrincipalTagAttributeMapCommand","deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError","deserializeAws_json1_1GetPrincipalTagAttributeMapResponse","deserializeAws_json1_1ListIdentitiesCommand","deserializeAws_json1_1ListIdentitiesCommandError","deserializeAws_json1_1ListIdentitiesResponse","deserializeAws_json1_1ListIdentityPoolsCommand","deserializeAws_json1_1ListIdentityPoolsCommandError","deserializeAws_json1_1ListIdentityPoolsResponse","deserializeAws_json1_1ListTagsForResourceCommand","deserializeAws_json1_1ListTagsForResourceCommandError","deserializeAws_json1_1ListTagsForResourceResponse","deserializeAws_json1_1LookupDeveloperIdentityCommand","deserializeAws_json1_1LookupDeveloperIdentityCommandError","deserializeAws_json1_1LookupDeveloperIdentityResponse","deserializeAws_json1_1MergeDeveloperIdentitiesCommand","deserializeAws_json1_1MergeDeveloperIdentitiesCommandError","deserializeAws_json1_1MergeDeveloperIdentitiesResponse","deserializeAws_json1_1SetIdentityPoolRolesCommand","deserializeAws_json1_1SetIdentityPoolRolesCommandError","deserializeAws_json1_1ConcurrentModificationExceptionResponse","deserializeAws_json1_1SetPrincipalTagAttributeMapCommand","deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError","deserializeAws_json1_1SetPrincipalTagAttributeMapResponse","deserializeAws_json1_1TagResourceCommand","deserializeAws_json1_1TagResourceCommandError","deserializeAws_json1_1TagResourceResponse","deserializeAws_json1_1UnlinkDeveloperIdentityCommand","deserializeAws_json1_1UnlinkDeveloperIdentityCommandError","deserializeAws_json1_1UnlinkIdentityCommand","deserializeAws_json1_1UnlinkIdentityCommandError","deserializeAws_json1_1UntagResourceCommand","deserializeAws_json1_1UntagResourceCommandError","deserializeAws_json1_1UntagResourceResponse","deserializeAws_json1_1UpdateIdentityPoolCommand","deserializeAws_json1_1UpdateIdentityPoolCommandError","deserialized","deserializeAws_json1_1ConcurrentModificationException","exception","deserializeAws_json1_1DeveloperUserAlreadyRegisteredException","deserializeAws_json1_1ExternalServiceException","deserializeAws_json1_1InternalErrorException","deserializeAws_json1_1InvalidIdentityPoolConfigurationException","deserializeAws_json1_1InvalidParameterException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1NotAuthorizedException","deserializeAws_json1_1ResourceConflictException","deserializeAws_json1_1ResourceNotFoundException","deserializeAws_json1_1TooManyRequestsException","serializeAws_json1_1CognitoIdentityProvider","ClientId","ProviderName","ServerSideTokenCheck","serializeAws_json1_1CognitoIdentityProviderList","filter","e","map","entry","AllowClassicFlow","AllowUnauthenticatedIdentities","CognitoIdentityProviders","DeveloperProviderName","IdentityPoolName","IdentityPoolTags","serializeAws_json1_1IdentityPoolTagsType","OpenIdConnectProviderARNs","serializeAws_json1_1OIDCProviderList","SamlProviderARNs","serializeAws_json1_1SAMLProviderList","SupportedLoginProviders","serializeAws_json1_1IdentityProviders","IdentityIdsToDelete","serializeAws_json1_1IdentityIdList","IdentityPoolId","IdentityId","CustomRoleArn","Logins","serializeAws_json1_1LoginsMap","AccountId","PrincipalTags","serializeAws_json1_1PrincipalTags","TokenDuration","IdentityProviderName","serializeAws_json1_1IdentityPoolTagsListType","Object","entries","reduce","acc","key","value","HideDisabled","MaxResults","NextToken","ResourceArn","serializeAws_json1_1LoginsList","DeveloperUserIdentifier","serializeAws_json1_1MappingRule","Claim","MatchType","RoleARN","Value","serializeAws_json1_1MappingRulesList","DestinationUserIdentifier","SourceUserIdentifier","serializeAws_json1_1RoleMapping","AmbiguousRoleResolution","RulesConfiguration","serializeAws_json1_1RulesConfigurationType","Type","serializeAws_json1_1RoleMappingMap","serializeAws_json1_1RolesMap","Rules","RoleMappings","Roles","UseDefaults","Tags","LoginsToRemove","TagKeys","deserializeAws_json1_1CognitoIdentityProvider","deserializeAws_json1_1CognitoIdentityProviderList","retVal","message","deserializeAws_json1_1Credentials","AccessKeyId","Expiration","SecretKey","SessionToken","UnprocessedIdentityIds","deserializeAws_json1_1UnprocessedIdentityIdList","deserializeAws_json1_1DeveloperUserIdentifierList","Credentials","deserializeAws_json1_1RoleMappingMap","deserializeAws_json1_1RolesMap","Token","deserializeAws_json1_1PrincipalTags","deserializeAws_json1_1IdentitiesList","CreationDate","LastModifiedDate","deserializeAws_json1_1LoginsList","deserializeAws_json1_1IdentityPoolTagsType","deserializeAws_json1_1OIDCProviderList","deserializeAws_json1_1SAMLProviderList","deserializeAws_json1_1IdentityProviders","deserializeAws_json1_1IdentityPoolShortDescription","deserializeAws_json1_1IdentityPoolsList","Identities","IdentityPools","DeveloperUserIdentifierList","deserializeAws_json1_1MappingRule","deserializeAws_json1_1MappingRulesList","deserializeAws_json1_1RoleMapping","deserializeAws_json1_1RulesConfigurationType","deserializeAws_json1_1UnprocessedIdentityId","ErrorCode","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","hostname","protocol","port","basePath","endpoint","method","endsWith","slice","encoded","length","parse","errorBody","Message","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","toString","indexOf","split","headerKey","code"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/client-cognito-identity/dist-es/protocols/Aws_json1_1.js"],"sourcesContent":["import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"../models/CognitoIdentityServiceException\";\nimport { ConcurrentModificationException, DeveloperUserAlreadyRegisteredException, ExternalServiceException, InternalErrorException, InvalidIdentityPoolConfigurationException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, ResourceNotFoundException, TooManyRequestsException, } from \"../models/models_0\";\nexport const serializeAws_json1_1CreateIdentityPoolCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.CreateIdentityPool\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentitiesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentities\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentityPoolCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentityPool\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityPoolCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentityPool\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetCredentialsForIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetCredentialsForIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetId\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetIdentityPoolRoles\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdToken\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetPrincipalTagAttributeMap\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetPrincipalTagAttributeMapInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentitiesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentities\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentityPoolsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentityPools\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListTagsForResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.ListTagsForResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1LookupDeveloperIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.LookupDeveloperIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1MergeDeveloperIdentitiesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.MergeDeveloperIdentities\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.SetIdentityPoolRoles\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.SetPrincipalTagAttributeMap\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1SetPrincipalTagAttributeMapInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1TagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.TagResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkDeveloperIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkDeveloperIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UntagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.UntagResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UpdateIdentityPoolCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.UpdateIdentityPool\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const deserializeAws_json1_1CreateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1CreateIdentityPoolCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1IdentityPool(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1CreateIdentityPoolCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1DeleteIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteIdentitiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DeleteIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1DeleteIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DeleteIdentityPoolCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1DescribeIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1IdentityDescription(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DescribeIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1DescribeIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1IdentityPool(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DescribeIdentityPoolCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetCredentialsForIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetCredentialsForIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidIdentityPoolConfigurationException\":\n        case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n            throw await deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetIdCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetIdCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetIdResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetIdentityPoolRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetOpenIdTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetOpenIdTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetOpenIdTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DeveloperUserAlreadyRegisteredException\":\n        case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n            throw await deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetPrincipalTagAttributeMapResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1ListIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListIdentitiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1ListIdentityPoolsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListIdentityPoolsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListIdentityPoolsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListTagsForResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListTagsForResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1LookupDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1LookupDeveloperIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1MergeDeveloperIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1MergeDeveloperIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1SetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1SetIdentityPoolRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConcurrentModificationException\":\n        case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n            throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1SetPrincipalTagAttributeMapResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1TagResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1TagResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1UnlinkDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UnlinkDeveloperIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1UnlinkIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UnlinkIdentityCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UnlinkIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UntagResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1UpdateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1IdentityPool(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UpdateIdentityPoolCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConcurrentModificationException\":\n        case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n            throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n    const exception = new ConcurrentModificationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);\n    const exception = new DeveloperUserAlreadyRegisteredException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ExternalServiceExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ExternalServiceException(body, context);\n    const exception = new ExternalServiceException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InternalErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1InternalErrorException(body, context);\n    const exception = new InternalErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);\n    const exception = new InvalidIdentityPoolConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n    const exception = new InvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1NotAuthorizedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1NotAuthorizedException(body, context);\n    const exception = new NotAuthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ResourceConflictExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ResourceConflictException(body, context);\n    const exception = new ResourceConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst serializeAws_json1_1CognitoIdentityProvider = (input, context) => {\n    return {\n        ...(input.ClientId != null && { ClientId: input.ClientId }),\n        ...(input.ProviderName != null && { ProviderName: input.ProviderName }),\n        ...(input.ServerSideTokenCheck != null && { ServerSideTokenCheck: input.ServerSideTokenCheck }),\n    };\n};\nconst serializeAws_json1_1CognitoIdentityProviderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n};\nconst serializeAws_json1_1CreateIdentityPoolInput = (input, context) => {\n    return {\n        ...(input.AllowClassicFlow != null && { AllowClassicFlow: input.AllowClassicFlow }),\n        ...(input.AllowUnauthenticatedIdentities != null && {\n            AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n        }),\n        ...(input.CognitoIdentityProviders != null && {\n            CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context),\n        }),\n        ...(input.DeveloperProviderName != null && { DeveloperProviderName: input.DeveloperProviderName }),\n        ...(input.IdentityPoolName != null && { IdentityPoolName: input.IdentityPoolName }),\n        ...(input.IdentityPoolTags != null && {\n            IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n        }),\n        ...(input.OpenIdConnectProviderARNs != null && {\n            OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n        }),\n        ...(input.SamlProviderARNs != null && {\n            SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n        }),\n        ...(input.SupportedLoginProviders != null && {\n            SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n        }),\n    };\n};\nconst serializeAws_json1_1DeleteIdentitiesInput = (input, context) => {\n    return {\n        ...(input.IdentityIdsToDelete != null && {\n            IdentityIdsToDelete: serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context),\n        }),\n    };\n};\nconst serializeAws_json1_1DeleteIdentityPoolInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n    };\n};\nconst serializeAws_json1_1DescribeIdentityInput = (input, context) => {\n    return {\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n    };\n};\nconst serializeAws_json1_1DescribeIdentityPoolInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n    };\n};\nconst serializeAws_json1_1GetCredentialsForIdentityInput = (input, context) => {\n    return {\n        ...(input.CustomRoleArn != null && { CustomRoleArn: input.CustomRoleArn }),\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    };\n};\nconst serializeAws_json1_1GetIdentityPoolRolesInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n    };\n};\nconst serializeAws_json1_1GetIdInput = (input, context) => {\n    return {\n        ...(input.AccountId != null && { AccountId: input.AccountId }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    };\n};\nconst serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = (input, context) => {\n    return {\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n        ...(input.PrincipalTags != null && {\n            PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context),\n        }),\n        ...(input.TokenDuration != null && { TokenDuration: input.TokenDuration }),\n    };\n};\nconst serializeAws_json1_1GetOpenIdTokenInput = (input, context) => {\n    return {\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    };\n};\nconst serializeAws_json1_1GetPrincipalTagAttributeMapInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.IdentityProviderName != null && { IdentityProviderName: input.IdentityProviderName }),\n    };\n};\nconst serializeAws_json1_1IdentityIdList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1IdentityPool = (input, context) => {\n    return {\n        ...(input.AllowClassicFlow != null && { AllowClassicFlow: input.AllowClassicFlow }),\n        ...(input.AllowUnauthenticatedIdentities != null && {\n            AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n        }),\n        ...(input.CognitoIdentityProviders != null && {\n            CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context),\n        }),\n        ...(input.DeveloperProviderName != null && { DeveloperProviderName: input.DeveloperProviderName }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.IdentityPoolName != null && { IdentityPoolName: input.IdentityPoolName }),\n        ...(input.IdentityPoolTags != null && {\n            IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n        }),\n        ...(input.OpenIdConnectProviderARNs != null && {\n            OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n        }),\n        ...(input.SamlProviderARNs != null && {\n            SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n        }),\n        ...(input.SupportedLoginProviders != null && {\n            SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n        }),\n    };\n};\nconst serializeAws_json1_1IdentityPoolTagsListType = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1IdentityPoolTagsType = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1IdentityProviders = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1ListIdentitiesInput = (input, context) => {\n    return {\n        ...(input.HideDisabled != null && { HideDisabled: input.HideDisabled }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.MaxResults != null && { MaxResults: input.MaxResults }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n    };\n};\nconst serializeAws_json1_1ListIdentityPoolsInput = (input, context) => {\n    return {\n        ...(input.MaxResults != null && { MaxResults: input.MaxResults }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n    };\n};\nconst serializeAws_json1_1ListTagsForResourceInput = (input, context) => {\n    return {\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n    };\n};\nconst serializeAws_json1_1LoginsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1LoginsMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1LookupDeveloperIdentityInput = (input, context) => {\n    return {\n        ...(input.DeveloperUserIdentifier != null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier }),\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.MaxResults != null && { MaxResults: input.MaxResults }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n    };\n};\nconst serializeAws_json1_1MappingRule = (input, context) => {\n    return {\n        ...(input.Claim != null && { Claim: input.Claim }),\n        ...(input.MatchType != null && { MatchType: input.MatchType }),\n        ...(input.RoleARN != null && { RoleARN: input.RoleARN }),\n        ...(input.Value != null && { Value: input.Value }),\n    };\n};\nconst serializeAws_json1_1MappingRulesList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_1MappingRule(entry, context);\n    });\n};\nconst serializeAws_json1_1MergeDeveloperIdentitiesInput = (input, context) => {\n    return {\n        ...(input.DestinationUserIdentifier != null && { DestinationUserIdentifier: input.DestinationUserIdentifier }),\n        ...(input.DeveloperProviderName != null && { DeveloperProviderName: input.DeveloperProviderName }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.SourceUserIdentifier != null && { SourceUserIdentifier: input.SourceUserIdentifier }),\n    };\n};\nconst serializeAws_json1_1OIDCProviderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1PrincipalTags = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1RoleMapping = (input, context) => {\n    return {\n        ...(input.AmbiguousRoleResolution != null && { AmbiguousRoleResolution: input.AmbiguousRoleResolution }),\n        ...(input.RulesConfiguration != null && {\n            RulesConfiguration: serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context),\n        }),\n        ...(input.Type != null && { Type: input.Type }),\n    };\n};\nconst serializeAws_json1_1RoleMappingMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_1RoleMapping(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1RolesMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1RulesConfigurationType = (input, context) => {\n    return {\n        ...(input.Rules != null && { Rules: serializeAws_json1_1MappingRulesList(input.Rules, context) }),\n    };\n};\nconst serializeAws_json1_1SAMLProviderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1SetIdentityPoolRolesInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.RoleMappings != null && {\n            RoleMappings: serializeAws_json1_1RoleMappingMap(input.RoleMappings, context),\n        }),\n        ...(input.Roles != null && { Roles: serializeAws_json1_1RolesMap(input.Roles, context) }),\n    };\n};\nconst serializeAws_json1_1SetPrincipalTagAttributeMapInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.IdentityProviderName != null && { IdentityProviderName: input.IdentityProviderName }),\n        ...(input.PrincipalTags != null && {\n            PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context),\n        }),\n        ...(input.UseDefaults != null && { UseDefaults: input.UseDefaults }),\n    };\n};\nconst serializeAws_json1_1TagResourceInput = (input, context) => {\n    return {\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n        ...(input.Tags != null && { Tags: serializeAws_json1_1IdentityPoolTagsType(input.Tags, context) }),\n    };\n};\nconst serializeAws_json1_1UnlinkDeveloperIdentityInput = (input, context) => {\n    return {\n        ...(input.DeveloperProviderName != null && { DeveloperProviderName: input.DeveloperProviderName }),\n        ...(input.DeveloperUserIdentifier != null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier }),\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n    };\n};\nconst serializeAws_json1_1UnlinkIdentityInput = (input, context) => {\n    return {\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n        ...(input.LoginsToRemove != null && {\n            LoginsToRemove: serializeAws_json1_1LoginsList(input.LoginsToRemove, context),\n        }),\n    };\n};\nconst serializeAws_json1_1UntagResourceInput = (input, context) => {\n    return {\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n        ...(input.TagKeys != null && { TagKeys: serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context) }),\n    };\n};\nconst deserializeAws_json1_1CognitoIdentityProvider = (output, context) => {\n    return {\n        ClientId: __expectString(output.ClientId),\n        ProviderName: __expectString(output.ProviderName),\n        ServerSideTokenCheck: __expectBoolean(output.ServerSideTokenCheck),\n    };\n};\nconst deserializeAws_json1_1CognitoIdentityProviderList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1ConcurrentModificationException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1Credentials = (output, context) => {\n    return {\n        AccessKeyId: __expectString(output.AccessKeyId),\n        Expiration: output.Expiration != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.Expiration))) : undefined,\n        SecretKey: __expectString(output.SecretKey),\n        SessionToken: __expectString(output.SessionToken),\n    };\n};\nconst deserializeAws_json1_1DeleteIdentitiesResponse = (output, context) => {\n    return {\n        UnprocessedIdentityIds: output.UnprocessedIdentityIds != null\n            ? deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1DeveloperUserIdentifierList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1ExternalServiceException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1GetCredentialsForIdentityResponse = (output, context) => {\n    return {\n        Credentials: output.Credentials != null ? deserializeAws_json1_1Credentials(output.Credentials, context) : undefined,\n        IdentityId: __expectString(output.IdentityId),\n    };\n};\nconst deserializeAws_json1_1GetIdentityPoolRolesResponse = (output, context) => {\n    return {\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        RoleMappings: output.RoleMappings != null ? deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context) : undefined,\n        Roles: output.Roles != null ? deserializeAws_json1_1RolesMap(output.Roles, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1GetIdResponse = (output, context) => {\n    return {\n        IdentityId: __expectString(output.IdentityId),\n    };\n};\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = (output, context) => {\n    return {\n        IdentityId: __expectString(output.IdentityId),\n        Token: __expectString(output.Token),\n    };\n};\nconst deserializeAws_json1_1GetOpenIdTokenResponse = (output, context) => {\n    return {\n        IdentityId: __expectString(output.IdentityId),\n        Token: __expectString(output.Token),\n    };\n};\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapResponse = (output, context) => {\n    return {\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        IdentityProviderName: __expectString(output.IdentityProviderName),\n        PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n        UseDefaults: __expectBoolean(output.UseDefaults),\n    };\n};\nconst deserializeAws_json1_1IdentitiesList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1IdentityDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1IdentityDescription = (output, context) => {\n    return {\n        CreationDate: output.CreationDate != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationDate)))\n            : undefined,\n        IdentityId: __expectString(output.IdentityId),\n        LastModifiedDate: output.LastModifiedDate != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedDate)))\n            : undefined,\n        Logins: output.Logins != null ? deserializeAws_json1_1LoginsList(output.Logins, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1IdentityPool = (output, context) => {\n    return {\n        AllowClassicFlow: __expectBoolean(output.AllowClassicFlow),\n        AllowUnauthenticatedIdentities: __expectBoolean(output.AllowUnauthenticatedIdentities),\n        CognitoIdentityProviders: output.CognitoIdentityProviders != null\n            ? deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context)\n            : undefined,\n        DeveloperProviderName: __expectString(output.DeveloperProviderName),\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        IdentityPoolName: __expectString(output.IdentityPoolName),\n        IdentityPoolTags: output.IdentityPoolTags != null\n            ? deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context)\n            : undefined,\n        OpenIdConnectProviderARNs: output.OpenIdConnectProviderARNs != null\n            ? deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context)\n            : undefined,\n        SamlProviderARNs: output.SamlProviderARNs != null\n            ? deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context)\n            : undefined,\n        SupportedLoginProviders: output.SupportedLoginProviders != null\n            ? deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1IdentityPoolShortDescription = (output, context) => {\n    return {\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        IdentityPoolName: __expectString(output.IdentityPoolName),\n    };\n};\nconst deserializeAws_json1_1IdentityPoolsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1IdentityPoolTagsType = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1IdentityProviders = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1InternalErrorException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1InvalidParameterException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1LimitExceededException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1ListIdentitiesResponse = (output, context) => {\n    return {\n        Identities: output.Identities != null ? deserializeAws_json1_1IdentitiesList(output.Identities, context) : undefined,\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_1ListIdentityPoolsResponse = (output, context) => {\n    return {\n        IdentityPools: output.IdentityPools != null ? deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context) : undefined,\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_1ListTagsForResourceResponse = (output, context) => {\n    return {\n        Tags: output.Tags != null ? deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1LoginsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1LookupDeveloperIdentityResponse = (output, context) => {\n    return {\n        DeveloperUserIdentifierList: output.DeveloperUserIdentifierList != null\n            ? deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context)\n            : undefined,\n        IdentityId: __expectString(output.IdentityId),\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_1MappingRule = (output, context) => {\n    return {\n        Claim: __expectString(output.Claim),\n        MatchType: __expectString(output.MatchType),\n        RoleARN: __expectString(output.RoleARN),\n        Value: __expectString(output.Value),\n    };\n};\nconst deserializeAws_json1_1MappingRulesList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1MappingRule(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1MergeDeveloperIdentitiesResponse = (output, context) => {\n    return {\n        IdentityId: __expectString(output.IdentityId),\n    };\n};\nconst deserializeAws_json1_1NotAuthorizedException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1OIDCProviderList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1PrincipalTags = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1ResourceConflictException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1ResourceNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1RoleMapping = (output, context) => {\n    return {\n        AmbiguousRoleResolution: __expectString(output.AmbiguousRoleResolution),\n        RulesConfiguration: output.RulesConfiguration != null\n            ? deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context)\n            : undefined,\n        Type: __expectString(output.Type),\n    };\n};\nconst deserializeAws_json1_1RoleMappingMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_1RoleMapping(value, context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1RolesMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1RulesConfigurationType = (output, context) => {\n    return {\n        Rules: output.Rules != null ? deserializeAws_json1_1MappingRulesList(output.Rules, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1SAMLProviderList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapResponse = (output, context) => {\n    return {\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        IdentityProviderName: __expectString(output.IdentityProviderName),\n        PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n        UseDefaults: __expectBoolean(output.UseDefaults),\n    };\n};\nconst deserializeAws_json1_1TagResourceResponse = (output, context) => {\n    return {};\n};\nconst deserializeAws_json1_1TooManyRequestsException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1UnprocessedIdentityId = (output, context) => {\n    return {\n        ErrorCode: __expectString(output.ErrorCode),\n        IdentityId: __expectString(output.IdentityId),\n    };\n};\nconst deserializeAws_json1_1UnprocessedIdentityIdList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1UnprocessedIdentityId(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1UntagResourceResponse = (output, context) => {\n    return {};\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}