{"ast":null,"code":"import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n  const {\n    conditions,\n    endpoint\n  } = endpointRule;\n  const {\n    result,\n    referenceRecord\n  } = evaluateConditions(conditions, options);\n\n  if (!result) {\n    return;\n  }\n\n  const endpointRuleOptions = { ...options,\n    referenceRecord: { ...options.referenceRecord,\n      ...referenceRecord\n    }\n  };\n  const {\n    url,\n    properties,\n    headers\n  } = endpoint;\n  options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);\n  return { ...(headers != undefined && {\n      headers: getEndpointHeaders(headers, endpointRuleOptions)\n    }),\n    ...(properties != undefined && {\n      properties: getEndpointProperties(properties, endpointRuleOptions)\n    }),\n    url: getEndpointUrl(url, endpointRuleOptions)\n  };\n};","map":{"version":3,"names":["debugId","toDebugString","evaluateConditions","getEndpointHeaders","getEndpointProperties","getEndpointUrl","evaluateEndpointRule","endpointRule","options","conditions","endpoint","result","referenceRecord","endpointRuleOptions","url","properties","headers","logger","debug","undefined"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateEndpointRule.js"],"sourcesContent":["import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,UAAvC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;EAC3D,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAA2BH,YAAjC;EACA,MAAM;IAAEI,MAAF;IAAUC;EAAV,IAA8BV,kBAAkB,CAACO,UAAD,EAAaD,OAAb,CAAtD;;EACA,IAAI,CAACG,MAAL,EAAa;IACT;EACH;;EACD,MAAME,mBAAmB,GAAG,EACxB,GAAGL,OADqB;IAExBI,eAAe,EAAE,EAAE,GAAGJ,OAAO,CAACI,eAAb;MAA8B,GAAGA;IAAjC;EAFO,CAA5B;EAIA,MAAM;IAAEE,GAAF;IAAOC,UAAP;IAAmBC;EAAnB,IAA+BN,QAArC;EACAF,OAAO,CAACS,MAAR,EAAgBC,KAAhB,GAAwBlB,OAAxB,EAAkC,qCAAoCC,aAAa,CAACS,QAAD,CAAW,EAA9F;EACA,OAAO,EACH,IAAIM,OAAO,IAAIG,SAAX,IAAwB;MACxBH,OAAO,EAAEb,kBAAkB,CAACa,OAAD,EAAUH,mBAAV;IADH,CAA5B,CADG;IAIH,IAAIE,UAAU,IAAII,SAAd,IAA2B;MAC3BJ,UAAU,EAAEX,qBAAqB,CAACW,UAAD,EAAaF,mBAAb;IADN,CAA/B,CAJG;IAOHC,GAAG,EAAET,cAAc,CAACS,GAAD,EAAMD,mBAAN;EAPhB,CAAP;AASH,CArBM"},"metadata":{},"sourceType":"module"}