{"ast":null,"code":"export const loggerMiddleware = () => (next, context) => async args => {\n  const response = await next(args);\n  const {\n    clientName,\n    commandName,\n    logger,\n    inputFilterSensitiveLog,\n    outputFilterSensitiveLog,\n    dynamoDbDocumentClientOptions = {}\n  } = context;\n  const {\n    overrideInputFilterSensitiveLog,\n    overrideOutputFilterSensitiveLog\n  } = dynamoDbDocumentClientOptions;\n\n  if (!logger) {\n    return response;\n  }\n\n  if (typeof logger.info === \"function\") {\n    const {\n      $metadata,\n      ...outputWithoutMetadata\n    } = response.output;\n    logger.info({\n      clientName,\n      commandName,\n      input: (overrideInputFilterSensitiveLog ?? inputFilterSensitiveLog)(args.input),\n      output: (overrideOutputFilterSensitiveLog ?? outputFilterSensitiveLog)(outputWithoutMetadata),\n      metadata: $metadata\n    });\n  }\n\n  return response;\n};\nexport const loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true\n};\nexport const getLoggerPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["loggerMiddleware","next","context","args","response","clientName","commandName","logger","inputFilterSensitiveLog","outputFilterSensitiveLog","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","info","$metadata","outputWithoutMetadata","output","input","metadata","loggerMiddlewareOptions","name","tags","step","override","getLoggerPlugin","options","applyToStack","clientStack","add"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js"],"sourcesContent":["export const loggerMiddleware = () => (next, context) => async (args) => {\n    const response = await next(args);\n    const { clientName, commandName, logger, inputFilterSensitiveLog, outputFilterSensitiveLog, dynamoDbDocumentClientOptions = {}, } = context;\n    const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: (overrideInputFilterSensitiveLog ?? inputFilterSensitiveLog)(args.input),\n            output: (overrideOutputFilterSensitiveLog ?? outputFilterSensitiveLog)(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAM,CAACC,IAAD,EAAOC,OAAP,KAAmB,MAAOC,IAAP,IAAgB;EACrE,MAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACE,IAAD,CAA3B;EACA,MAAM;IAAEE,UAAF;IAAcC,WAAd;IAA2BC,MAA3B;IAAmCC,uBAAnC;IAA4DC,wBAA5D;IAAsFC,6BAA6B,GAAG;EAAtH,IAA8HR,OAApI;EACA,MAAM;IAAES,+BAAF;IAAmCC;EAAnC,IAAwEF,6BAA9E;;EACA,IAAI,CAACH,MAAL,EAAa;IACT,OAAOH,QAAP;EACH;;EACD,IAAI,OAAOG,MAAM,CAACM,IAAd,KAAuB,UAA3B,EAAuC;IACnC,MAAM;MAAEC,SAAF;MAAa,GAAGC;IAAhB,IAA0CX,QAAQ,CAACY,MAAzD;IACAT,MAAM,CAACM,IAAP,CAAY;MACRR,UADQ;MAERC,WAFQ;MAGRW,KAAK,EAAE,CAACN,+BAA+B,IAAIH,uBAApC,EAA6DL,IAAI,CAACc,KAAlE,CAHC;MAIRD,MAAM,EAAE,CAACJ,gCAAgC,IAAIH,wBAArC,EAA+DM,qBAA/D,CAJA;MAKRG,QAAQ,EAAEJ;IALF,CAAZ;EAOH;;EACD,OAAOV,QAAP;AACH,CAlBM;AAmBP,OAAO,MAAMe,uBAAuB,GAAG;EACnCC,IAAI,EAAE,kBAD6B;EAEnCC,IAAI,EAAE,CAAC,QAAD,CAF6B;EAGnCC,IAAI,EAAE,YAH6B;EAInCC,QAAQ,EAAE;AAJyB,CAAhC;AAMP,OAAO,MAAMC,eAAe,GAAIC,OAAD,KAAc;EACzCC,YAAY,EAAGC,WAAD,IAAiB;IAC3BA,WAAW,CAACC,GAAZ,CAAgB5B,gBAAgB,EAAhC,EAAoCmB,uBAApC;EACH;AAHwC,CAAd,CAAxB"},"metadata":{},"sourceType":"module"}