{"ast":null,"code":"const {\n  buildOptions\n} = require(\"./OptionsBuilder\");\n\nconst OrderedObjParser = require(\"./OrderedObjParser\");\n\nconst {\n  prettify\n} = require(\"./node2json\");\n\nconst validator = require('../validator');\n\nclass XMLParser {\n  constructor(options) {\n    this.externalEntities = {};\n    this.options = buildOptions(options);\n  }\n  /**\n   * Parse XML dats to JS object \n   * @param {string|Buffer} xmlData \n   * @param {boolean|Object} validationOption \n   */\n\n\n  parse(xmlData, validationOption) {\n    if (typeof xmlData === \"string\") {} else if (xmlData.toString) {\n      xmlData = xmlData.toString();\n    } else {\n      throw new Error(\"XML data is accepted in String or Bytes[] form.\");\n    }\n\n    if (validationOption) {\n      if (validationOption === true) validationOption = {}; //validate with default options\n\n      const result = validator.validate(xmlData, validationOption);\n\n      if (result !== true) {\n        throw Error(`${result.err.msg}:${result.err.line}:${result.err.col}`);\n      }\n    }\n\n    const orderedObjParser = new OrderedObjParser(this.options);\n    orderedObjParser.addExternalEntities(this.externalEntities);\n    const orderedResult = orderedObjParser.parseXml(xmlData);\n    if (this.options.preserveOrder || orderedResult === undefined) return orderedResult;else return prettify(orderedResult, this.options);\n  }\n  /**\n   * Add Entity which is not by default supported by this library\n   * @param {string} key \n   * @param {string} value \n   */\n\n\n  addEntity(key, value) {\n    if (value.indexOf(\"&\") !== -1) {\n      throw new Error(\"Entity value can't have '&'\");\n    } else if (key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1) {\n      throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\");\n    } else if (value === \"&\") {\n      throw new Error(\"An entity with value '&' is not permitted\");\n    } else {\n      this.externalEntities[key] = value;\n    }\n  }\n\n}\n\nmodule.exports = XMLParser;","map":{"version":3,"names":["buildOptions","require","OrderedObjParser","prettify","validator","XMLParser","constructor","options","externalEntities","parse","xmlData","validationOption","toString","Error","result","validate","err","msg","line","col","orderedObjParser","addExternalEntities","orderedResult","parseXml","preserveOrder","undefined","addEntity","key","value","indexOf","module","exports"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/fast-xml-parser/src/xmlparser/XMLParser.js"],"sourcesContent":["const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAkBC,OAAO,CAAC,kBAAD,CAA/B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAhC;;AACA,MAAM;EAAEE;AAAF,IAAcF,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,cAAD,CAAzB;;AAEA,MAAMI,SAAN,CAAe;EAEXC,WAAW,CAACC,OAAD,EAAS;IAChB,KAAKC,gBAAL,GAAwB,EAAxB;IACA,KAAKD,OAAL,GAAeP,YAAY,CAACO,OAAD,CAA3B;EAEH;EACD;AACJ;AACA;AACA;AACA;;;EACIE,KAAK,CAACC,OAAD,EAASC,gBAAT,EAA0B;IAC3B,IAAG,OAAOD,OAAP,KAAmB,QAAtB,EAA+B,CAC9B,CADD,MACM,IAAIA,OAAO,CAACE,QAAZ,EAAqB;MACvBF,OAAO,GAAGA,OAAO,CAACE,QAAR,EAAV;IACH,CAFK,MAED;MACD,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;IACH;;IACD,IAAIF,gBAAJ,EAAqB;MACjB,IAAGA,gBAAgB,KAAK,IAAxB,EAA8BA,gBAAgB,GAAG,EAAnB,CADb,CACoC;;MAErD,MAAMG,MAAM,GAAGV,SAAS,CAACW,QAAV,CAAmBL,OAAnB,EAA4BC,gBAA5B,CAAf;;MACA,IAAIG,MAAM,KAAK,IAAf,EAAqB;QACnB,MAAMD,KAAK,CAAG,GAAEC,MAAM,CAACE,GAAP,CAAWC,GAAI,IAAGH,MAAM,CAACE,GAAP,CAAWE,IAAK,IAAGJ,MAAM,CAACE,GAAP,CAAWG,GAAI,EAAzD,CAAX;MACD;IACF;;IACH,MAAMC,gBAAgB,GAAG,IAAIlB,gBAAJ,CAAqB,KAAKK,OAA1B,CAAzB;IACAa,gBAAgB,CAACC,mBAAjB,CAAqC,KAAKb,gBAA1C;IACA,MAAMc,aAAa,GAAGF,gBAAgB,CAACG,QAAjB,CAA0Bb,OAA1B,CAAtB;IACA,IAAG,KAAKH,OAAL,CAAaiB,aAAb,IAA8BF,aAAa,KAAKG,SAAnD,EAA8D,OAAOH,aAAP,CAA9D,KACK,OAAOnB,QAAQ,CAACmB,aAAD,EAAgB,KAAKf,OAArB,CAAf;EACR;EAED;AACJ;AACA;AACA;AACA;;;EACImB,SAAS,CAACC,GAAD,EAAMC,KAAN,EAAY;IACjB,IAAGA,KAAK,CAACC,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA3B,EAA6B;MACzB,MAAM,IAAIhB,KAAJ,CAAU,6BAAV,CAAN;IACH,CAFD,MAEM,IAAGc,GAAG,CAACE,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,IAA2BF,GAAG,CAACE,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAApD,EAAsD;MACxD,MAAM,IAAIhB,KAAJ,CAAU,sEAAV,CAAN;IACH,CAFK,MAEA,IAAGe,KAAK,KAAK,GAAb,EAAiB;MACnB,MAAM,IAAIf,KAAJ,CAAU,2CAAV,CAAN;IACH,CAFK,MAED;MACD,KAAKL,gBAAL,CAAsBmB,GAAtB,IAA6BC,KAA7B;IACH;EACJ;;AAjDU;;AAoDfE,MAAM,CAACC,OAAP,GAAiB1B,SAAjB"},"metadata":{},"sourceType":"script"}