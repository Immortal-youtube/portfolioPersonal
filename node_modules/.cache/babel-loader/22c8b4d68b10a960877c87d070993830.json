{"ast":null,"code":"import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetSessionTokenRequestFilterSensitiveLog, GetSessionTokenResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_queryGetSessionTokenCommand, serializeAws_queryGetSessionTokenCommand } from \"../protocols/Aws_query\";\nexport class GetSessionTokenCommand extends $Command {\n  constructor(input) {\n    super();\n    this.input = input;\n  }\n\n  static getEndpointParameterInstructions() {\n    return {\n      UseGlobalEndpoint: {\n        type: \"builtInParams\",\n        name: \"useGlobalEndpoint\"\n      },\n      UseFIPS: {\n        type: \"builtInParams\",\n        name: \"useFipsEndpoint\"\n      },\n      Endpoint: {\n        type: \"builtInParams\",\n        name: \"endpoint\"\n      },\n      Region: {\n        type: \"builtInParams\",\n        name: \"region\"\n      },\n      UseDualStack: {\n        type: \"builtInParams\",\n        name: \"useDualstackEndpoint\"\n      }\n    };\n  }\n\n  resolveMiddleware(clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getEndpointPlugin(configuration, GetSessionTokenCommand.getEndpointParameterInstructions()));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n    const stack = clientStack.concat(this.middlewareStack);\n    const {\n      logger\n    } = configuration;\n    const clientName = \"STSClient\";\n    const commandName = \"GetSessionTokenCommand\";\n    const handlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetSessionTokenRequestFilterSensitiveLog,\n      outputFilterSensitiveLog: GetSessionTokenResponseFilterSensitiveLog\n    };\n    const {\n      requestHandler\n    } = configuration;\n    return stack.resolve(request => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n  }\n\n  serialize(input, context) {\n    return serializeAws_queryGetSessionTokenCommand(input, context);\n  }\n\n  deserialize(output, context) {\n    return deserializeAws_queryGetSessionTokenCommand(output, context);\n  }\n\n}","map":{"version":3,"names":["getEndpointPlugin","getSerdePlugin","getAwsAuthPlugin","Command","$Command","GetSessionTokenRequestFilterSensitiveLog","GetSessionTokenResponseFilterSensitiveLog","deserializeAws_queryGetSessionTokenCommand","serializeAws_queryGetSessionTokenCommand","GetSessionTokenCommand","constructor","input","getEndpointParameterInstructions","UseGlobalEndpoint","type","name","UseFIPS","Endpoint","Region","UseDualStack","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/client-sts/dist-es/commands/GetSessionTokenCommand.js"],"sourcesContent":["import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetSessionTokenRequestFilterSensitiveLog, GetSessionTokenResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_queryGetSessionTokenCommand, serializeAws_queryGetSessionTokenCommand, } from \"../protocols/Aws_query\";\nexport class GetSessionTokenCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetSessionTokenCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use(getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetSessionTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetSessionTokenRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetSessionTokenResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_queryGetSessionTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_queryGetSessionTokenCommand(output, context);\n    }\n}\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,8BAAlC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA,SAASC,wCAAT,EAAmDC,yCAAnD,QAAqG,oBAArG;AACA,SAASC,0CAAT,EAAqDC,wCAArD,QAAsG,wBAAtG;AACA,OAAO,MAAMC,sBAAN,SAAqCL,QAArC,CAA8C;EACjDM,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,KAAKA,KAAL,GAAaA,KAAb;EACH;;EACsC,OAAhCC,gCAAgC,GAAG;IACtC,OAAO;MACHC,iBAAiB,EAAE;QAAEC,IAAI,EAAE,eAAR;QAAyBC,IAAI,EAAE;MAA/B,CADhB;MAEHC,OAAO,EAAE;QAAEF,IAAI,EAAE,eAAR;QAAyBC,IAAI,EAAE;MAA/B,CAFN;MAGHE,QAAQ,EAAE;QAAEH,IAAI,EAAE,eAAR;QAAyBC,IAAI,EAAE;MAA/B,CAHP;MAIHG,MAAM,EAAE;QAAEJ,IAAI,EAAE,eAAR;QAAyBC,IAAI,EAAE;MAA/B,CAJL;MAKHI,YAAY,EAAE;QAAEL,IAAI,EAAE,eAAR;QAAyBC,IAAI,EAAE;MAA/B;IALX,CAAP;EAOH;;EACDK,iBAAiB,CAACC,WAAD,EAAcC,aAAd,EAA6BC,OAA7B,EAAsC;IACnD,KAAKC,eAAL,CAAqBC,GAArB,CAAyBxB,cAAc,CAACqB,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBzB,iBAAiB,CAACsB,aAAD,EAAgBb,sBAAsB,CAACG,gCAAvB,EAAhB,CAA1C;IACA,KAAKY,eAAL,CAAqBC,GAArB,CAAyBvB,gBAAgB,CAACoB,aAAD,CAAzC;IACA,MAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;IACA,MAAM;MAAEM;IAAF,IAAaR,aAAnB;IACA,MAAMS,UAAU,GAAG,WAAnB;IACA,MAAMC,WAAW,GAAG,wBAApB;IACA,MAAMC,uBAAuB,GAAG;MAC5BH,MAD4B;MAE5BC,UAF4B;MAG5BC,WAH4B;MAI5BE,uBAAuB,EAAE7B,wCAJG;MAK5B8B,wBAAwB,EAAE7B;IALE,CAAhC;IAOA,MAAM;MAAE8B;IAAF,IAAqBd,aAA3B;IACA,OAAOM,KAAK,CAACS,OAAN,CAAeC,OAAD,IAAaF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuCf,OAAO,IAAI,EAAlD,CAA3B,EAAkFU,uBAAlF,CAAP;EACH;;EACDP,SAAS,CAACf,KAAD,EAAQ6B,OAAR,EAAiB;IACtB,OAAOhC,wCAAwC,CAACG,KAAD,EAAQ6B,OAAR,CAA/C;EACH;;EACDb,WAAW,CAACc,MAAD,EAASD,OAAT,EAAkB;IACzB,OAAOjC,0CAA0C,CAACkC,MAAD,EAASD,OAAT,CAAjD;EACH;;AArCgD"},"metadata":{},"sourceType":"module"}