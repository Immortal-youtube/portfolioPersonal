{"ast":null,"code":"//TODO: handle comments\nfunction readDocType(xmlData, i) {\n  const entities = {};\n\n  if (xmlData[i + 3] === 'O' && xmlData[i + 4] === 'C' && xmlData[i + 5] === 'T' && xmlData[i + 6] === 'Y' && xmlData[i + 7] === 'P' && xmlData[i + 8] === 'E') {\n    i = i + 9;\n    let angleBracketsCount = 1;\n    let hasBody = false,\n        entity = false,\n        comment = false;\n    let exp = \"\";\n\n    for (; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        if (hasBody && xmlData[i + 1] === '!' && xmlData[i + 2] === 'E' && xmlData[i + 3] === 'N' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'I' && xmlData[i + 6] === 'T' && xmlData[i + 7] === 'Y') {\n          i += 7;\n          entity = true;\n        } else if (hasBody && xmlData[i + 1] === '!' && xmlData[i + 2] === 'E' && xmlData[i + 3] === 'L' && xmlData[i + 4] === 'E' && xmlData[i + 5] === 'M' && xmlData[i + 6] === 'E' && xmlData[i + 7] === 'N' && xmlData[i + 8] === 'T') {\n          //Not supported\n          i += 8;\n        } else if (hasBody && xmlData[i + 1] === '!' && xmlData[i + 2] === 'A' && xmlData[i + 3] === 'T' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'L' && xmlData[i + 6] === 'I' && xmlData[i + 7] === 'S' && xmlData[i + 8] === 'T') {\n          //Not supported\n          i += 8;\n        } else if (hasBody && xmlData[i + 1] === '!' && xmlData[i + 2] === 'N' && xmlData[i + 3] === 'O' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'A' && xmlData[i + 6] === 'T' && xmlData[i + 7] === 'I' && xmlData[i + 8] === 'O' && xmlData[i + 9] === 'N') {\n          //Not supported\n          i += 9;\n        } else if ( //comment\n        xmlData[i + 1] === '!' && xmlData[i + 2] === '-' && xmlData[i + 3] === '-') {\n          comment = true;\n        } else {\n          throw new Error(\"Invalid DOCTYPE\");\n        }\n\n        angleBracketsCount++;\n        exp = \"\";\n      } else if (xmlData[i] === '>') {\n        if (comment) {\n          if (xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\") {\n            comment = false;\n          } else {\n            throw new Error(`Invalid XML comment in DOCTYPE`);\n          }\n        } else if (entity) {\n          parseEntityExp(exp, entities);\n          entity = false;\n        }\n\n        angleBracketsCount--;\n\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      } else if (xmlData[i] === '[') {\n        hasBody = true;\n      } else {\n        exp += xmlData[i];\n      }\n    }\n\n    if (angleBracketsCount !== 0) {\n      throw new Error(`Unclosed DOCTYPE`);\n    }\n  } else {\n    throw new Error(`Invalid Tag instead of DOCTYPE`);\n  }\n\n  return {\n    entities,\n    i\n  };\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\n\nfunction parseEntityExp(exp, entities) {\n  const match = entityRegex.exec(exp);\n\n  if (match) {\n    entities[match[1]] = {\n      regx: RegExp(`&${match[1]};`, \"g\"),\n      val: match[3]\n    };\n  }\n}\n\nmodule.exports = readDocType;","map":{"version":3,"names":["readDocType","xmlData","i","entities","angleBracketsCount","hasBody","entity","comment","exp","length","Error","parseEntityExp","entityRegex","RegExp","match","exec","regx","val","module","exports"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js"],"sourcesContent":["//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<') {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'A' &&\n                    xmlData[i+3] === 'T' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'L' &&\n                    xmlData[i+6] === 'I' &&\n                    xmlData[i+7] === 'S' &&\n                    xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'N' &&\n                    xmlData[i+3] === 'O' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'A' &&\n                    xmlData[i+6] === 'T' &&\n                    xmlData[i+7] === 'I' &&\n                    xmlData[i+8] === 'O' &&\n                    xmlData[i+9] === 'N'\n                ){\n                    //Not supported\n                    i += 9;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                    }else{\n                        throw new Error(`Invalid XML comment in DOCTYPE`);\n                    }\n                }else if(entity){\n                    parseEntityExp(exp, entities);\n                    entity = false;\n                }\n                angleBracketsCount--;\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;"],"mappings":"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"},"metadata":{},"sourceType":"script"}