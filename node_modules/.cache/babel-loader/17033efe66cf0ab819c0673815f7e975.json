{"ast":null,"code":"import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n  return next => async args => {\n    const request = args.request;\n\n    if (HttpRequest.isInstance(request)) {\n      const {\n        body,\n        headers\n      } = request;\n\n      if (body && Object.keys(headers).map(str => str.toLowerCase()).indexOf(CONTENT_LENGTH_HEADER) === -1) {\n        try {\n          const length = bodyLengthChecker(body);\n          request.headers = { ...request.headers,\n            [CONTENT_LENGTH_HEADER]: String(length)\n          };\n        } catch (error) {}\n      }\n    }\n\n    return next({ ...args,\n      request\n    });\n  };\n}\nexport const contentLengthMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n  name: \"contentLengthMiddleware\",\n  override: true\n};\nexport const getContentLengthPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["HttpRequest","CONTENT_LENGTH_HEADER","contentLengthMiddleware","bodyLengthChecker","next","args","request","isInstance","body","headers","Object","keys","map","str","toLowerCase","indexOf","length","String","error","contentLengthMiddlewareOptions","step","tags","name","override","getContentLengthPlugin","options","applyToStack","clientStack","add"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/middleware-content-length/dist-es/index.js"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,MAAMC,qBAAqB,GAAG,gBAA9B;AACA,OAAO,SAASC,uBAAT,CAAiCC,iBAAjC,EAAoD;EACvD,OAAQC,IAAD,IAAU,MAAOC,IAAP,IAAgB;IAC7B,MAAMC,OAAO,GAAGD,IAAI,CAACC,OAArB;;IACA,IAAIN,WAAW,CAACO,UAAZ,CAAuBD,OAAvB,CAAJ,EAAqC;MACjC,MAAM;QAAEE,IAAF;QAAQC;MAAR,IAAoBH,OAA1B;;MACA,IAAIE,IAAI,IACJE,MAAM,CAACC,IAAP,CAAYF,OAAZ,EACKG,GADL,CACUC,GAAD,IAASA,GAAG,CAACC,WAAJ,EADlB,EAEKC,OAFL,CAEad,qBAFb,MAEwC,CAAC,CAH7C,EAGgD;QAC5C,IAAI;UACA,MAAMe,MAAM,GAAGb,iBAAiB,CAACK,IAAD,CAAhC;UACAF,OAAO,CAACG,OAAR,GAAkB,EACd,GAAGH,OAAO,CAACG,OADG;YAEd,CAACR,qBAAD,GAAyBgB,MAAM,CAACD,MAAD;UAFjB,CAAlB;QAIH,CAND,CAOA,OAAOE,KAAP,EAAc,CACb;MACJ;IACJ;;IACD,OAAOd,IAAI,CAAC,EACR,GAAGC,IADK;MAERC;IAFQ,CAAD,CAAX;EAIH,CAvBD;AAwBH;AACD,OAAO,MAAMa,8BAA8B,GAAG;EAC1CC,IAAI,EAAE,OADoC;EAE1CC,IAAI,EAAE,CAAC,oBAAD,EAAuB,gBAAvB,CAFoC;EAG1CC,IAAI,EAAE,yBAHoC;EAI1CC,QAAQ,EAAE;AAJgC,CAAvC;AAMP,OAAO,MAAMC,sBAAsB,GAAIC,OAAD,KAAc;EAChDC,YAAY,EAAGC,WAAD,IAAiB;IAC3BA,WAAW,CAACC,GAAZ,CAAgB1B,uBAAuB,CAACuB,OAAO,CAACtB,iBAAT,CAAvC,EAAoEgB,8BAApE;EACH;AAH+C,CAAd,CAA/B"},"metadata":{},"sourceType":"module"}