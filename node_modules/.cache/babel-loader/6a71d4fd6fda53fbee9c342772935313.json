{"ast":null,"code":"export function resolveLogins(logins) {\n  return Promise.all(Object.keys(logins).reduce((arr, name) => {\n    const tokenOrProvider = logins[name];\n\n    if (typeof tokenOrProvider === \"string\") {\n      arr.push([name, tokenOrProvider]);\n    } else {\n      arr.push(tokenOrProvider().then(token => [name, token]));\n    }\n\n    return arr;\n  }, [])).then(resolvedPairs => resolvedPairs.reduce((logins, _ref) => {\n    let [key, value] = _ref;\n    logins[key] = value;\n    return logins;\n  }, {}));\n}","map":{"version":3,"names":["resolveLogins","logins","Promise","all","Object","keys","reduce","arr","name","tokenOrProvider","push","then","token","resolvedPairs","key","value"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/resolveLogins.js"],"sourcesContent":["export function resolveLogins(logins) {\n    return Promise.all(Object.keys(logins).reduce((arr, name) => {\n        const tokenOrProvider = logins[name];\n        if (typeof tokenOrProvider === \"string\") {\n            arr.push([name, tokenOrProvider]);\n        }\n        else {\n            arr.push(tokenOrProvider().then((token) => [name, token]));\n        }\n        return arr;\n    }, [])).then((resolvedPairs) => resolvedPairs.reduce((logins, [key, value]) => {\n        logins[key] = value;\n        return logins;\n    }, {}));\n}\n"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;EAClC,OAAOC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA2B,CAACC,GAAD,EAAMC,IAAN,KAAe;IACzD,MAAMC,eAAe,GAAGR,MAAM,CAACO,IAAD,CAA9B;;IACA,IAAI,OAAOC,eAAP,KAA2B,QAA/B,EAAyC;MACrCF,GAAG,CAACG,IAAJ,CAAS,CAACF,IAAD,EAAOC,eAAP,CAAT;IACH,CAFD,MAGK;MACDF,GAAG,CAACG,IAAJ,CAASD,eAAe,GAAGE,IAAlB,CAAwBC,KAAD,IAAW,CAACJ,IAAD,EAAOI,KAAP,CAAlC,CAAT;IACH;;IACD,OAAOL,GAAP;EACH,CATkB,EAShB,EATgB,CAAZ,EASCI,IATD,CASOE,aAAD,IAAmBA,aAAa,CAACP,MAAd,CAAqB,CAACL,MAAD,WAA0B;IAAA,IAAjB,CAACa,GAAD,EAAMC,KAAN,CAAiB;IAC3Ed,MAAM,CAACa,GAAD,CAAN,GAAcC,KAAd;IACA,OAAOd,MAAP;EACH,CAH+B,EAG7B,EAH6B,CATzB,CAAP;AAaH"},"metadata":{},"sourceType":"module"}