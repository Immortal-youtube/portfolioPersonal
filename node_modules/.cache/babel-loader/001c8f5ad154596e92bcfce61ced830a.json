{"ast":null,"code":"export const fromUtf8 = input => {\n  const bytes = [];\n\n  for (let i = 0, len = input.length; i < len; i++) {\n    const value = input.charCodeAt(i);\n\n    if (value < 0x80) {\n      bytes.push(value);\n    } else if (value < 0x800) {\n      bytes.push(value >> 6 | 0b11000000, value & 0b111111 | 0b10000000);\n    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n      bytes.push(surrogatePair >> 18 | 0b11110000, surrogatePair >> 12 & 0b111111 | 0b10000000, surrogatePair >> 6 & 0b111111 | 0b10000000, surrogatePair & 0b111111 | 0b10000000);\n    } else {\n      bytes.push(value >> 12 | 0b11100000, value >> 6 & 0b111111 | 0b10000000, value & 0b111111 | 0b10000000);\n    }\n  }\n\n  return Uint8Array.from(bytes);\n};\nexport const toUtf8 = input => {\n  let decoded = \"\";\n\n  for (let i = 0, len = input.length; i < len; i++) {\n    const byte = input[i];\n\n    if (byte < 0x80) {\n      decoded += String.fromCharCode(byte);\n    } else if (0b11000000 <= byte && byte < 0b11100000) {\n      const nextByte = input[++i];\n      decoded += String.fromCharCode((byte & 0b11111) << 6 | nextByte & 0b111111);\n    } else if (0b11110000 <= byte && byte < 0b101101101) {\n      const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n      const encoded = \"%\" + surrogatePair.map(byteValue => byteValue.toString(16)).join(\"%\");\n      decoded += decodeURIComponent(encoded);\n    } else {\n      decoded += String.fromCharCode((byte & 0b1111) << 12 | (input[++i] & 0b111111) << 6 | input[++i] & 0b111111);\n    }\n  }\n\n  return decoded;\n};","map":{"version":3,"names":["fromUtf8","input","bytes","i","len","length","value","charCodeAt","push","surrogatePair","Uint8Array","from","toUtf8","decoded","byte","String","fromCharCode","nextByte","encoded","map","byteValue","toString","join","decodeURIComponent"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js"],"sourcesContent":["export const fromUtf8 = (input) => {\n    const bytes = [];\n    for (let i = 0, len = input.length; i < len; i++) {\n        const value = input.charCodeAt(i);\n        if (value < 0x80) {\n            bytes.push(value);\n        }\n        else if (value < 0x800) {\n            bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n        }\n        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n            bytes.push((surrogatePair >> 18) | 0b11110000, ((surrogatePair >> 12) & 0b111111) | 0b10000000, ((surrogatePair >> 6) & 0b111111) | 0b10000000, (surrogatePair & 0b111111) | 0b10000000);\n        }\n        else {\n            bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n        }\n    }\n    return Uint8Array.from(bytes);\n};\nexport const toUtf8 = (input) => {\n    let decoded = \"\";\n    for (let i = 0, len = input.length; i < len; i++) {\n        const byte = input[i];\n        if (byte < 0x80) {\n            decoded += String.fromCharCode(byte);\n        }\n        else if (0b11000000 <= byte && byte < 0b11100000) {\n            const nextByte = input[++i];\n            decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n        }\n        else if (0b11110000 <= byte && byte < 0b101101101) {\n            const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n            const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n            decoded += decodeURIComponent(encoded);\n        }\n        else {\n            decoded += String.fromCharCode(((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111));\n        }\n    }\n    return decoded;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IAAW;EAC/B,MAAMC,KAAK,GAAG,EAAd;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,KAAK,CAACI,MAA5B,EAAoCF,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;IAC9C,MAAMG,KAAK,GAAGL,KAAK,CAACM,UAAN,CAAiBJ,CAAjB,CAAd;;IACA,IAAIG,KAAK,GAAG,IAAZ,EAAkB;MACdJ,KAAK,CAACM,IAAN,CAAWF,KAAX;IACH,CAFD,MAGK,IAAIA,KAAK,GAAG,KAAZ,EAAmB;MACpBJ,KAAK,CAACM,IAAN,CAAYF,KAAK,IAAI,CAAV,GAAe,UAA1B,EAAuCA,KAAK,GAAG,QAAT,GAAqB,UAA3D;IACH,CAFI,MAGA,IAAIH,CAAC,GAAG,CAAJ,GAAQF,KAAK,CAACI,MAAd,IAAwB,CAACC,KAAK,GAAG,MAAT,MAAqB,MAA7C,IAAuD,CAACL,KAAK,CAACM,UAAN,CAAiBJ,CAAC,GAAG,CAArB,IAA0B,MAA3B,MAAuC,MAAlG,EAA0G;MAC3G,MAAMM,aAAa,GAAG,WAAW,CAACH,KAAK,GAAG,YAAT,KAA0B,EAArC,KAA4CL,KAAK,CAACM,UAAN,CAAiB,EAAEJ,CAAnB,IAAwB,YAApE,CAAtB;MACAD,KAAK,CAACM,IAAN,CAAYC,aAAa,IAAI,EAAlB,GAAwB,UAAnC,EAAiDA,aAAa,IAAI,EAAlB,GAAwB,QAAzB,GAAqC,UAApF,EAAkGA,aAAa,IAAI,CAAlB,GAAuB,QAAxB,GAAoC,UAApI,EAAiJA,aAAa,GAAG,QAAjB,GAA6B,UAA7K;IACH,CAHI,MAIA;MACDP,KAAK,CAACM,IAAN,CAAYF,KAAK,IAAI,EAAV,GAAgB,UAA3B,EAAyCA,KAAK,IAAI,CAAV,GAAe,QAAhB,GAA4B,UAAnE,EAAgFA,KAAK,GAAG,QAAT,GAAqB,UAApG;IACH;EACJ;;EACD,OAAOI,UAAU,CAACC,IAAX,CAAgBT,KAAhB,CAAP;AACH,CAnBM;AAoBP,OAAO,MAAMU,MAAM,GAAIX,KAAD,IAAW;EAC7B,IAAIY,OAAO,GAAG,EAAd;;EACA,KAAK,IAAIV,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,KAAK,CAACI,MAA5B,EAAoCF,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;IAC9C,MAAMW,IAAI,GAAGb,KAAK,CAACE,CAAD,CAAlB;;IACA,IAAIW,IAAI,GAAG,IAAX,EAAiB;MACbD,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAoBF,IAApB,CAAX;IACH,CAFD,MAGK,IAAI,cAAcA,IAAd,IAAsBA,IAAI,GAAG,UAAjC,EAA6C;MAC9C,MAAMG,QAAQ,GAAGhB,KAAK,CAAC,EAAEE,CAAH,CAAtB;MACAU,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAqB,CAACF,IAAI,GAAG,OAAR,KAAoB,CAArB,GAA2BG,QAAQ,GAAG,QAA1D,CAAX;IACH,CAHI,MAIA,IAAI,cAAcH,IAAd,IAAsBA,IAAI,GAAG,WAAjC,EAA8C;MAC/C,MAAML,aAAa,GAAG,CAACK,IAAD,EAAOb,KAAK,CAAC,EAAEE,CAAH,CAAZ,EAAmBF,KAAK,CAAC,EAAEE,CAAH,CAAxB,EAA+BF,KAAK,CAAC,EAAEE,CAAH,CAApC,CAAtB;MACA,MAAMe,OAAO,GAAG,MAAMT,aAAa,CAACU,GAAd,CAAmBC,SAAD,IAAeA,SAAS,CAACC,QAAV,CAAmB,EAAnB,CAAjC,EAAyDC,IAAzD,CAA8D,GAA9D,CAAtB;MACAT,OAAO,IAAIU,kBAAkB,CAACL,OAAD,CAA7B;IACH,CAJI,MAKA;MACDL,OAAO,IAAIE,MAAM,CAACC,YAAP,CAAqB,CAACF,IAAI,GAAG,MAAR,KAAmB,EAApB,GAA2B,CAACb,KAAK,CAAC,EAAEE,CAAH,CAAL,GAAa,QAAd,KAA2B,CAAtD,GAA4DF,KAAK,CAAC,EAAEE,CAAH,CAAL,GAAa,QAA7F,CAAX;IACH;EACJ;;EACD,OAAOU,OAAP;AACH,CArBM"},"metadata":{},"sourceType":"module"}