{"ast":null,"code":"'use strict';\n\nvar SockJS = require('sockjs-client/dist/sockjs');\n\nvar retries = 0;\nvar sock = null;\n\nvar socket = function initSocket(url, handlers) {\n  sock = new SockJS(url);\n\n  sock.onopen = function onopen() {\n    retries = 0;\n  };\n\n  sock.onclose = function onclose() {\n    if (retries === 0) {\n      handlers.close();\n    } // Try to reconnect.\n\n\n    sock = null; // After 10 retries stop trying, to prevent logspam.\n\n    if (retries <= 10) {\n      // Exponentially increase timeout to reconnect.\n      // Respectfully copied from the package `got`.\n      // eslint-disable-next-line no-mixed-operators, no-restricted-properties\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n      retries += 1;\n      setTimeout(function () {\n        socket(url, handlers);\n      }, retryInMs);\n    }\n  };\n\n  sock.onmessage = function onmessage(e) {\n    // This assumes that all data sent via the websocket is JSON.\n    var msg = JSON.parse(e.data);\n\n    if (handlers[msg.type]) {\n      handlers[msg.type](msg.data);\n    }\n  };\n};\n\nmodule.exports = socket;","map":{"version":3,"names":["SockJS","require","retries","sock","socket","initSocket","url","handlers","onopen","onclose","close","retryInMs","Math","pow","random","setTimeout","onmessage","e","msg","JSON","parse","data","type","module","exports"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/webpack-dev-server/client/socket.js"],"sourcesContent":["'use strict';\r\n\r\nvar SockJS = require('sockjs-client/dist/sockjs');\r\n\r\nvar retries = 0;\r\nvar sock = null;\r\n\r\nvar socket = function initSocket(url, handlers) {\r\n  sock = new SockJS(url);\r\n\r\n  sock.onopen = function onopen() {\r\n    retries = 0;\r\n  };\r\n\r\n  sock.onclose = function onclose() {\r\n    if (retries === 0) {\r\n      handlers.close();\r\n    }\r\n\r\n    // Try to reconnect.\r\n    sock = null;\r\n\r\n    // After 10 retries stop trying, to prevent logspam.\r\n    if (retries <= 10) {\r\n      // Exponentially increase timeout to reconnect.\r\n      // Respectfully copied from the package `got`.\r\n      // eslint-disable-next-line no-mixed-operators, no-restricted-properties\r\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\r\n      retries += 1;\r\n\r\n      setTimeout(function () {\r\n        socket(url, handlers);\r\n      }, retryInMs);\r\n    }\r\n  };\r\n\r\n  sock.onmessage = function onmessage(e) {\r\n    // This assumes that all data sent via the websocket is JSON.\r\n    var msg = JSON.parse(e.data);\r\n    if (handlers[msg.type]) {\r\n      handlers[msg.type](msg.data);\r\n    }\r\n  };\r\n};\r\n\r\nmodule.exports = socket;"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,2BAAD,CAApB;;AAEA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,IAAI,GAAG,IAAX;;AAEA,IAAIC,MAAM,GAAG,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,QAAzB,EAAmC;EAC9CJ,IAAI,GAAG,IAAIH,MAAJ,CAAWM,GAAX,CAAP;;EAEAH,IAAI,CAACK,MAAL,GAAc,SAASA,MAAT,GAAkB;IAC9BN,OAAO,GAAG,CAAV;EACD,CAFD;;EAIAC,IAAI,CAACM,OAAL,GAAe,SAASA,OAAT,GAAmB;IAChC,IAAIP,OAAO,KAAK,CAAhB,EAAmB;MACjBK,QAAQ,CAACG,KAAT;IACD,CAH+B,CAKhC;;;IACAP,IAAI,GAAG,IAAP,CANgC,CAQhC;;IACA,IAAID,OAAO,IAAI,EAAf,EAAmB;MACjB;MACA;MACA;MACA,IAAIS,SAAS,GAAG,OAAOC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYX,OAAZ,CAAP,GAA8BU,IAAI,CAACE,MAAL,KAAgB,GAA9D;MACAZ,OAAO,IAAI,CAAX;MAEAa,UAAU,CAAC,YAAY;QACrBX,MAAM,CAACE,GAAD,EAAMC,QAAN,CAAN;MACD,CAFS,EAEPI,SAFO,CAAV;IAGD;EACF,CApBD;;EAsBAR,IAAI,CAACa,SAAL,GAAiB,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;IACrC;IACA,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,IAAb,CAAV;;IACA,IAAId,QAAQ,CAACW,GAAG,CAACI,IAAL,CAAZ,EAAwB;MACtBf,QAAQ,CAACW,GAAG,CAACI,IAAL,CAAR,CAAmBJ,GAAG,CAACG,IAAvB;IACD;EACF,CAND;AAOD,CApCD;;AAsCAE,MAAM,CAACC,OAAP,GAAiBpB,MAAjB"},"metadata":{},"sourceType":"script"}