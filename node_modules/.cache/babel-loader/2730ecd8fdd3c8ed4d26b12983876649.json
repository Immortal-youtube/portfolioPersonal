{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthProvider = exports.AuthContext = void 0;\n\nconst error_1 = require(\"../../error\");\n/** Context used during authentication */\n\n\nclass AuthContext {\n  constructor(connection, credentials, options) {\n    this.connection = connection;\n    this.credentials = credentials;\n    this.options = options;\n  }\n\n}\n\nexports.AuthContext = AuthContext;\n\nclass AuthProvider {\n  /**\n   * Prepare the handshake document before the initial handshake.\n   *\n   * @param handshakeDoc - The document used for the initial handshake on a connection\n   * @param authContext - Context for authentication flow\n   */\n  prepare(handshakeDoc, authContext, callback) {\n    callback(undefined, handshakeDoc);\n  }\n  /**\n   * Authenticate\n   *\n   * @param context - A shared context for authentication flow\n   * @param callback - The callback to return the result from the authentication\n   */\n\n\n  auth(context, callback) {\n    // TODO(NODE-3483): Replace this with MongoMethodOverrideError\n    callback(new error_1.MongoRuntimeError('`auth` method must be overridden by subclass'));\n  }\n\n}\n\nexports.AuthProvider = AuthProvider;","map":{"version":3,"mappings":";;;;;;;AACA;AAQA;;;AACA,MAAaA,WAAb,CAAwB;EAatBC,YACEC,UADF,EAEEC,WAFF,EAGEC,OAHF,EAG6B;IAE3B,KAAKF,UAAL,GAAkBA,UAAlB;IACA,KAAKC,WAAL,GAAmBA,WAAnB;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;;AArBqB;;AAAxBC;;AAwBA,MAAaC,YAAb,CAAyB;EACvB;;;;;;EAMAC,OAAO,CACLC,YADK,EAELC,WAFK,EAGLC,QAHK,EAGgC;IAErCA,QAAQ,CAACC,SAAD,EAAYH,YAAZ,CAAR;EACD;EAED;;;;;;;;EAMAI,IAAI,CAACC,OAAD,EAAuBH,QAAvB,EAAyC;IAC3C;IACAA,QAAQ,CAAC,IAAII,yBAAJ,CAAsB,8CAAtB,CAAD,CAAR;EACD;;AAxBsB;;AAAzBT","names":["AuthContext","constructor","connection","credentials","options","exports","AuthProvider","prepare","handshakeDoc","authContext","callback","undefined","auth","context","error_1"],"sources":["C:\\Users\\anshs\\OneDrive\\Documents\\Code\\WebDevelopement\\portfolioPersonal\\node_modules\\mongodb\\src\\cmap\\auth\\auth_provider.ts"],"sourcesContent":["import type { Document } from '../../bson';\nimport { MongoRuntimeError } from '../../error';\nimport type { Callback, ClientMetadataOptions } from '../../utils';\nimport type { HandshakeDocument } from '../connect';\nimport type { Connection, ConnectionOptions } from '../connection';\nimport type { MongoCredentials } from './mongo_credentials';\n\nexport type AuthContextOptions = ConnectionOptions & ClientMetadataOptions;\n\n/** Context used during authentication */\nexport class AuthContext {\n  /** The connection to authenticate */\n  connection: Connection;\n  /** The credentials to use for authentication */\n  credentials?: MongoCredentials;\n  /** The options passed to the `connect` method */\n  options: AuthContextOptions;\n\n  /** A response from an initial auth attempt, only some mechanisms use this (e.g, SCRAM) */\n  response?: Document;\n  /** A random nonce generated for use in an authentication conversation */\n  nonce?: Buffer;\n\n  constructor(\n    connection: Connection,\n    credentials: MongoCredentials | undefined,\n    options: AuthContextOptions\n  ) {\n    this.connection = connection;\n    this.credentials = credentials;\n    this.options = options;\n  }\n}\n\nexport class AuthProvider {\n  /**\n   * Prepare the handshake document before the initial handshake.\n   *\n   * @param handshakeDoc - The document used for the initial handshake on a connection\n   * @param authContext - Context for authentication flow\n   */\n  prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext,\n    callback: Callback<HandshakeDocument>\n  ): void {\n    callback(undefined, handshakeDoc);\n  }\n\n  /**\n   * Authenticate\n   *\n   * @param context - A shared context for authentication flow\n   * @param callback - The callback to return the result from the authentication\n   */\n  auth(context: AuthContext, callback: Callback): void {\n    // TODO(NODE-3483): Replace this with MongoMethodOverrideError\n    callback(new MongoRuntimeError('`auth` method must be overridden by subclass'));\n  }\n}\n"]},"metadata":{},"sourceType":"script"}