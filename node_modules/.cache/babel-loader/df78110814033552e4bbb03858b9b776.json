{"ast":null,"code":"import { EndpointError } from \"../types\";\nexport const getAttrPathList = path => {\n  const parts = path.split(\".\");\n  const pathList = [];\n\n  for (const part of parts) {\n    const squareBracketIndex = part.indexOf(\"[\");\n\n    if (squareBracketIndex !== -1) {\n      if (part.indexOf(\"]\") !== part.length - 1) {\n        throw new EndpointError(`Path: '${path}' does not end with ']'`);\n      }\n\n      const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n\n      if (Number.isNaN(parseInt(arrayIndex))) {\n        throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n      }\n\n      if (squareBracketIndex !== 0) {\n        pathList.push(part.slice(0, squareBracketIndex));\n      }\n\n      pathList.push(arrayIndex);\n    } else {\n      pathList.push(part);\n    }\n  }\n\n  return pathList;\n};","map":{"version":3,"names":["EndpointError","getAttrPathList","path","parts","split","pathList","part","squareBracketIndex","indexOf","length","arrayIndex","slice","Number","isNaN","parseInt","push"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttrPathList.js"],"sourcesContent":["import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAU;EACrC,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAd;EACA,MAAMC,QAAQ,GAAG,EAAjB;;EACA,KAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;IACtB,MAAMI,kBAAkB,GAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,CAA3B;;IACA,IAAID,kBAAkB,KAAK,CAAC,CAA5B,EAA+B;MAC3B,IAAID,IAAI,CAACE,OAAL,CAAa,GAAb,MAAsBF,IAAI,CAACG,MAAL,GAAc,CAAxC,EAA2C;QACvC,MAAM,IAAIT,aAAJ,CAAmB,UAASE,IAAK,yBAAjC,CAAN;MACH;;MACD,MAAMQ,UAAU,GAAGJ,IAAI,CAACK,KAAL,CAAWJ,kBAAkB,GAAG,CAAhC,EAAmC,CAAC,CAApC,CAAnB;;MACA,IAAIK,MAAM,CAACC,KAAP,CAAaC,QAAQ,CAACJ,UAAD,CAArB,CAAJ,EAAwC;QACpC,MAAM,IAAIV,aAAJ,CAAmB,yBAAwBU,UAAW,eAAcR,IAAK,GAAzE,CAAN;MACH;;MACD,IAAIK,kBAAkB,KAAK,CAA3B,EAA8B;QAC1BF,QAAQ,CAACU,IAAT,CAAcT,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcJ,kBAAd,CAAd;MACH;;MACDF,QAAQ,CAACU,IAAT,CAAcL,UAAd;IACH,CAZD,MAaK;MACDL,QAAQ,CAACU,IAAT,CAAcT,IAAd;IACH;EACJ;;EACD,OAAOD,QAAP;AACH,CAvBM"},"metadata":{},"sourceType":"module"}