{"ast":null,"code":"import { CognitoIdentity } from \"../CognitoIdentity\";\nimport { CognitoIdentityClient } from \"../CognitoIdentityClient\";\nimport { ListIdentityPoolsCommand } from \"../commands/ListIdentityPoolsCommand\";\n\nconst makePagedClientRequest = async function (client, input) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return await client.send(new ListIdentityPoolsCommand(input), ...args);\n};\n\nconst makePagedRequest = async function (client, input) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return await client.listIdentityPools(input, ...args);\n};\n\nexport async function* paginateListIdentityPools(config, input) {\n  let token = config.startingToken || undefined;\n  let hasNext = true;\n  let page;\n\n  for (var _len3 = arguments.length, additionalArguments = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    additionalArguments[_key3 - 2] = arguments[_key3];\n  }\n\n  while (hasNext) {\n    input.NextToken = token;\n    input[\"MaxResults\"] = config.pageSize;\n\n    if (config.client instanceof CognitoIdentity) {\n      page = await makePagedRequest(config.client, input, ...additionalArguments);\n    } else if (config.client instanceof CognitoIdentityClient) {\n      page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n    } else {\n      throw new Error(\"Invalid client, expected CognitoIdentity | CognitoIdentityClient\");\n    }\n\n    yield page;\n    const prevToken = token;\n    token = page.NextToken;\n    hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n  }\n\n  return undefined;\n}","map":{"version":3,"names":["CognitoIdentity","CognitoIdentityClient","ListIdentityPoolsCommand","makePagedClientRequest","client","input","args","send","makePagedRequest","listIdentityPools","paginateListIdentityPools","config","token","startingToken","undefined","hasNext","page","additionalArguments","NextToken","pageSize","Error","prevToken","stopOnSameToken"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/client-cognito-identity/dist-es/pagination/ListIdentityPoolsPaginator.js"],"sourcesContent":["import { CognitoIdentity } from \"../CognitoIdentity\";\nimport { CognitoIdentityClient } from \"../CognitoIdentityClient\";\nimport { ListIdentityPoolsCommand, } from \"../commands/ListIdentityPoolsCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListIdentityPoolsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listIdentityPools(input, ...args);\n};\nexport async function* paginateListIdentityPools(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CognitoIdentity) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CognitoIdentityClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CognitoIdentity | CognitoIdentityClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,oBAAhC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,wBAAT,QAA0C,sCAA1C;;AACA,MAAMC,sBAAsB,GAAG,gBAAOC,MAAP,EAAeC,KAAf,EAAkC;EAAA,kCAATC,IAAS;IAATA,IAAS;EAAA;;EAC7D,OAAO,MAAMF,MAAM,CAACG,IAAP,CAAY,IAAIL,wBAAJ,CAA6BG,KAA7B,CAAZ,EAAiD,GAAGC,IAApD,CAAb;AACH,CAFD;;AAGA,MAAME,gBAAgB,GAAG,gBAAOJ,MAAP,EAAeC,KAAf,EAAkC;EAAA,mCAATC,IAAS;IAATA,IAAS;EAAA;;EACvD,OAAO,MAAMF,MAAM,CAACK,iBAAP,CAAyBJ,KAAzB,EAAgC,GAAGC,IAAnC,CAAb;AACH,CAFD;;AAGA,OAAO,gBAAgBI,yBAAhB,CAA0CC,MAA1C,EAAkDN,KAAlD,EAAiF;EACpF,IAAIO,KAAK,GAAGD,MAAM,CAACE,aAAP,IAAwBC,SAApC;EACA,IAAIC,OAAO,GAAG,IAAd;EACA,IAAIC,IAAJ;;EAHoF,mCAArBC,mBAAqB;IAArBA,mBAAqB;EAAA;;EAIpF,OAAOF,OAAP,EAAgB;IACZV,KAAK,CAACa,SAAN,GAAkBN,KAAlB;IACAP,KAAK,CAAC,YAAD,CAAL,GAAsBM,MAAM,CAACQ,QAA7B;;IACA,IAAIR,MAAM,CAACP,MAAP,YAAyBJ,eAA7B,EAA8C;MAC1CgB,IAAI,GAAG,MAAMR,gBAAgB,CAACG,MAAM,CAACP,MAAR,EAAgBC,KAAhB,EAAuB,GAAGY,mBAA1B,CAA7B;IACH,CAFD,MAGK,IAAIN,MAAM,CAACP,MAAP,YAAyBH,qBAA7B,EAAoD;MACrDe,IAAI,GAAG,MAAMb,sBAAsB,CAACQ,MAAM,CAACP,MAAR,EAAgBC,KAAhB,EAAuB,GAAGY,mBAA1B,CAAnC;IACH,CAFI,MAGA;MACD,MAAM,IAAIG,KAAJ,CAAU,kEAAV,CAAN;IACH;;IACD,MAAMJ,IAAN;IACA,MAAMK,SAAS,GAAGT,KAAlB;IACAA,KAAK,GAAGI,IAAI,CAACE,SAAb;IACAH,OAAO,GAAG,CAAC,EAAEH,KAAK,KAAK,CAACD,MAAM,CAACW,eAAR,IAA2BV,KAAK,KAAKS,SAA1C,CAAP,CAAX;EACH;;EACD,OAAOP,SAAP;AACH"},"metadata":{},"sourceType":"module"}