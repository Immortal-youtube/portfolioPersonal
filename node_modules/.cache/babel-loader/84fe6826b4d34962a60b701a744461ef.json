{"ast":null,"code":"export const memoize = (provider, isExpired, requiresRefresh) => {\n  let resolved;\n  let pending;\n  let hasResult;\n  let isConstant = false;\n\n  const coalesceProvider = async () => {\n    if (!pending) {\n      pending = provider();\n    }\n\n    try {\n      resolved = await pending;\n      hasResult = true;\n      isConstant = false;\n    } finally {\n      pending = undefined;\n    }\n\n    return resolved;\n  };\n\n  if (isExpired === undefined) {\n    return async options => {\n      if (!hasResult || options?.forceRefresh) {\n        resolved = await coalesceProvider();\n      }\n\n      return resolved;\n    };\n  }\n\n  return async options => {\n    if (!hasResult || options?.forceRefresh) {\n      resolved = await coalesceProvider();\n    }\n\n    if (isConstant) {\n      return resolved;\n    }\n\n    if (requiresRefresh && !requiresRefresh(resolved)) {\n      isConstant = true;\n      return resolved;\n    }\n\n    if (isExpired(resolved)) {\n      await coalesceProvider();\n      return resolved;\n    }\n\n    return resolved;\n  };\n};","map":{"version":3,"names":["memoize","provider","isExpired","requiresRefresh","resolved","pending","hasResult","isConstant","coalesceProvider","undefined","options","forceRefresh"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/property-provider/dist-es/memoize.js"],"sourcesContent":["export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,eAAtB,KAA0C;EAC7D,IAAIC,QAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,SAAJ;EACA,IAAIC,UAAU,GAAG,KAAjB;;EACA,MAAMC,gBAAgB,GAAG,YAAY;IACjC,IAAI,CAACH,OAAL,EAAc;MACVA,OAAO,GAAGJ,QAAQ,EAAlB;IACH;;IACD,IAAI;MACAG,QAAQ,GAAG,MAAMC,OAAjB;MACAC,SAAS,GAAG,IAAZ;MACAC,UAAU,GAAG,KAAb;IACH,CAJD,SAKQ;MACJF,OAAO,GAAGI,SAAV;IACH;;IACD,OAAOL,QAAP;EACH,CAbD;;EAcA,IAAIF,SAAS,KAAKO,SAAlB,EAA6B;IACzB,OAAO,MAAOC,OAAP,IAAmB;MACtB,IAAI,CAACJ,SAAD,IAAcI,OAAO,EAAEC,YAA3B,EAAyC;QACrCP,QAAQ,GAAG,MAAMI,gBAAgB,EAAjC;MACH;;MACD,OAAOJ,QAAP;IACH,CALD;EAMH;;EACD,OAAO,MAAOM,OAAP,IAAmB;IACtB,IAAI,CAACJ,SAAD,IAAcI,OAAO,EAAEC,YAA3B,EAAyC;MACrCP,QAAQ,GAAG,MAAMI,gBAAgB,EAAjC;IACH;;IACD,IAAID,UAAJ,EAAgB;MACZ,OAAOH,QAAP;IACH;;IACD,IAAID,eAAe,IAAI,CAACA,eAAe,CAACC,QAAD,CAAvC,EAAmD;MAC/CG,UAAU,GAAG,IAAb;MACA,OAAOH,QAAP;IACH;;IACD,IAAIF,SAAS,CAACE,QAAD,CAAb,EAAyB;MACrB,MAAMI,gBAAgB,EAAtB;MACA,OAAOJ,QAAP;IACH;;IACD,OAAOA,QAAP;EACH,CAhBD;AAiBH,CA5CM"},"metadata":{},"sourceType":"module"}