{"ast":null,"code":"import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n  const evaluatedTemplateArr = [];\n  const templateContext = { ...options.endpointParams,\n    ...options.referenceRecord\n  };\n  let currentIndex = 0;\n\n  while (currentIndex < template.length) {\n    const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n\n    if (openingBraceIndex === -1) {\n      evaluatedTemplateArr.push(template.slice(currentIndex));\n      break;\n    }\n\n    evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n    const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n\n    if (closingBraceIndex === -1) {\n      evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n      break;\n    }\n\n    if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n      evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n      currentIndex = closingBraceIndex + 2;\n    }\n\n    const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n\n    if (parameterName.includes(\"#\")) {\n      const [refName, attrName] = parameterName.split(\"#\");\n      evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n    } else {\n      evaluatedTemplateArr.push(templateContext[parameterName]);\n    }\n\n    currentIndex = closingBraceIndex + 1;\n  }\n\n  return evaluatedTemplateArr.join(\"\");\n};","map":{"version":3,"names":["getAttr","evaluateTemplate","template","options","evaluatedTemplateArr","templateContext","endpointParams","referenceRecord","currentIndex","length","openingBraceIndex","indexOf","push","slice","closingBraceIndex","parameterName","substring","includes","refName","attrName","split","join"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTemplate.js"],"sourcesContent":["import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;EACnD,MAAMC,oBAAoB,GAAG,EAA7B;EACA,MAAMC,eAAe,GAAG,EACpB,GAAGF,OAAO,CAACG,cADS;IAEpB,GAAGH,OAAO,CAACI;EAFS,CAAxB;EAIA,IAAIC,YAAY,GAAG,CAAnB;;EACA,OAAOA,YAAY,GAAGN,QAAQ,CAACO,MAA/B,EAAuC;IACnC,MAAMC,iBAAiB,GAAGR,QAAQ,CAACS,OAAT,CAAiB,GAAjB,EAAsBH,YAAtB,CAA1B;;IACA,IAAIE,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;MAC1BN,oBAAoB,CAACQ,IAArB,CAA0BV,QAAQ,CAACW,KAAT,CAAeL,YAAf,CAA1B;MACA;IACH;;IACDJ,oBAAoB,CAACQ,IAArB,CAA0BV,QAAQ,CAACW,KAAT,CAAeL,YAAf,EAA6BE,iBAA7B,CAA1B;IACA,MAAMI,iBAAiB,GAAGZ,QAAQ,CAACS,OAAT,CAAiB,GAAjB,EAAsBD,iBAAtB,CAA1B;;IACA,IAAII,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;MAC1BV,oBAAoB,CAACQ,IAArB,CAA0BV,QAAQ,CAACW,KAAT,CAAeH,iBAAf,CAA1B;MACA;IACH;;IACD,IAAIR,QAAQ,CAACQ,iBAAiB,GAAG,CAArB,CAAR,KAAoC,GAApC,IAA2CR,QAAQ,CAACY,iBAAiB,GAAG,CAArB,CAAR,KAAoC,GAAnF,EAAwF;MACpFV,oBAAoB,CAACQ,IAArB,CAA0BV,QAAQ,CAACW,KAAT,CAAeH,iBAAiB,GAAG,CAAnC,EAAsCI,iBAAtC,CAA1B;MACAN,YAAY,GAAGM,iBAAiB,GAAG,CAAnC;IACH;;IACD,MAAMC,aAAa,GAAGb,QAAQ,CAACc,SAAT,CAAmBN,iBAAiB,GAAG,CAAvC,EAA0CI,iBAA1C,CAAtB;;IACA,IAAIC,aAAa,CAACE,QAAd,CAAuB,GAAvB,CAAJ,EAAiC;MAC7B,MAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,aAAa,CAACK,KAAd,CAAoB,GAApB,CAA5B;MACAhB,oBAAoB,CAACQ,IAArB,CAA0BZ,OAAO,CAACK,eAAe,CAACa,OAAD,CAAhB,EAA2BC,QAA3B,CAAjC;IACH,CAHD,MAIK;MACDf,oBAAoB,CAACQ,IAArB,CAA0BP,eAAe,CAACU,aAAD,CAAzC;IACH;;IACDP,YAAY,GAAGM,iBAAiB,GAAG,CAAnC;EACH;;EACD,OAAOV,oBAAoB,CAACiB,IAArB,CAA0B,EAA1B,CAAP;AACH,CAlCM"},"metadata":{},"sourceType":"module"}