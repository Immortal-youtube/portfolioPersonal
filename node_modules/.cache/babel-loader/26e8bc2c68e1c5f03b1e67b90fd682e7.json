{"ast":null,"code":"import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\n\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n  if (!customizations) return baseCtor;else return class CustomizableSTSClient extends baseCtor {\n    constructor(config) {\n      super(config);\n\n      for (const customization of customizations) {\n        this.middlewareStack.use(customization);\n      }\n    }\n\n  };\n};\n\nexport const getDefaultRoleAssumer = function () {\n  let stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let stsPlugins = arguments.length > 1 ? arguments[1] : undefined;\n  return StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\n};\nexport const getDefaultRoleAssumerWithWebIdentity = function () {\n  let stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let stsPlugins = arguments.length > 1 ? arguments[1] : undefined;\n  return StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\n};\nexport const decorateDefaultCredentialProvider = provider => input => provider({\n  roleAssumer: getDefaultRoleAssumer(input),\n  roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n  ...input\n});","map":{"version":3,"names":["getDefaultRoleAssumer","StsGetDefaultRoleAssumer","getDefaultRoleAssumerWithWebIdentity","StsGetDefaultRoleAssumerWithWebIdentity","STSClient","getCustomizableStsClientCtor","baseCtor","customizations","CustomizableSTSClient","constructor","config","customization","middlewareStack","use","stsOptions","stsPlugins","decorateDefaultCredentialProvider","provider","input","roleAssumer","roleAssumerWithWebIdentity"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js"],"sourcesContent":["import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n"],"mappings":"AAAA,SAASA,qBAAqB,IAAIC,wBAAlC,EAA4DC,oCAAoC,IAAIC,uCAApG,QAAoJ,0BAApJ;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,MAAMC,4BAA4B,GAAG,CAACC,QAAD,EAAWC,cAAX,KAA8B;EAC/D,IAAI,CAACA,cAAL,EACI,OAAOD,QAAP,CADJ,KAGI,OAAO,MAAME,qBAAN,SAAoCF,QAApC,CAA6C;IAChDG,WAAW,CAACC,MAAD,EAAS;MAChB,MAAMA,MAAN;;MACA,KAAK,MAAMC,aAAX,IAA4BJ,cAA5B,EAA4C;QACxC,KAAKK,eAAL,CAAqBC,GAArB,CAAyBF,aAAzB;MACH;IACJ;;EAN+C,CAApD;AAQP,CAZD;;AAaA,OAAO,MAAMX,qBAAqB,GAAG;EAAA,IAACc,UAAD,uEAAc,EAAd;EAAA,IAAkBC,UAAlB;EAAA,OAAiCd,wBAAwB,CAACa,UAAD,EAAaT,4BAA4B,CAACD,SAAD,EAAYW,UAAZ,CAAzC,CAAzD;AAAA,CAA9B;AACP,OAAO,MAAMb,oCAAoC,GAAG;EAAA,IAACY,UAAD,uEAAc,EAAd;EAAA,IAAkBC,UAAlB;EAAA,OAAiCZ,uCAAuC,CAACW,UAAD,EAAaT,4BAA4B,CAACD,SAAD,EAAYW,UAAZ,CAAzC,CAAxE;AAAA,CAA7C;AACP,OAAO,MAAMC,iCAAiC,GAAIC,QAAD,IAAeC,KAAD,IAAWD,QAAQ,CAAC;EAC/EE,WAAW,EAAEnB,qBAAqB,CAACkB,KAAD,CAD6C;EAE/EE,0BAA0B,EAAElB,oCAAoC,CAACgB,KAAD,CAFe;EAG/E,GAAGA;AAH4E,CAAD,CAA3E"},"metadata":{},"sourceType":"module"}