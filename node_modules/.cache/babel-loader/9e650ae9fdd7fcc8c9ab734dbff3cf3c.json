{"ast":null,"code":"import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = options => next => async args => {\n  const {\n    request\n  } = args;\n\n  if (!HttpRequest.isInstance(request) || options.runtime !== \"node\" || request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n    return next(args);\n  }\n\n  const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n  const traceId = process.env[ENV_TRACE_ID];\n\n  const nonEmptyString = str => typeof str === \"string\" && str.length > 0;\n\n  if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n    request.headers[TRACE_ID_HEADER_NAME] = traceId;\n  }\n\n  return next({ ...args,\n    request\n  });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"RECURSION_DETECTION\"],\n  name: \"recursionDetectionMiddleware\",\n  override: true,\n  priority: \"low\"\n};\nexport const getRecursionDetectionPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["HttpRequest","TRACE_ID_HEADER_NAME","ENV_LAMBDA_FUNCTION_NAME","ENV_TRACE_ID","recursionDetectionMiddleware","options","next","args","request","isInstance","runtime","headers","hasOwnProperty","functionName","process","env","traceId","nonEmptyString","str","length","addRecursionDetectionMiddlewareOptions","step","tags","name","override","priority","getRecursionDetectionPlugin","applyToStack","clientStack","add"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,MAAMC,oBAAoB,GAAG,iBAA7B;AACA,MAAMC,wBAAwB,GAAG,0BAAjC;AACA,MAAMC,YAAY,GAAG,kBAArB;AACA,OAAO,MAAMC,4BAA4B,GAAIC,OAAD,IAAcC,IAAD,IAAU,MAAOC,IAAP,IAAgB;EAC/E,MAAM;IAAEC;EAAF,IAAcD,IAApB;;EACA,IAAI,CAACP,WAAW,CAACS,UAAZ,CAAuBD,OAAvB,CAAD,IACAH,OAAO,CAACK,OAAR,KAAoB,MADpB,IAEAF,OAAO,CAACG,OAAR,CAAgBC,cAAhB,CAA+BX,oBAA/B,CAFJ,EAE0D;IACtD,OAAOK,IAAI,CAACC,IAAD,CAAX;EACH;;EACD,MAAMM,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYb,wBAAZ,CAArB;EACA,MAAMc,OAAO,GAAGF,OAAO,CAACC,GAAR,CAAYZ,YAAZ,CAAhB;;EACA,MAAMc,cAAc,GAAIC,GAAD,IAAS,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACC,MAAJ,GAAa,CAAxE;;EACA,IAAIF,cAAc,CAACJ,YAAD,CAAd,IAAgCI,cAAc,CAACD,OAAD,CAAlD,EAA6D;IACzDR,OAAO,CAACG,OAAR,CAAgBV,oBAAhB,IAAwCe,OAAxC;EACH;;EACD,OAAOV,IAAI,CAAC,EACR,GAAGC,IADK;IAERC;EAFQ,CAAD,CAAX;AAIH,CAjBM;AAkBP,OAAO,MAAMY,sCAAsC,GAAG;EAClDC,IAAI,EAAE,OAD4C;EAElDC,IAAI,EAAE,CAAC,qBAAD,CAF4C;EAGlDC,IAAI,EAAE,8BAH4C;EAIlDC,QAAQ,EAAE,IAJwC;EAKlDC,QAAQ,EAAE;AALwC,CAA/C;AAOP,OAAO,MAAMC,2BAA2B,GAAIrB,OAAD,KAAc;EACrDsB,YAAY,EAAGC,WAAD,IAAiB;IAC3BA,WAAW,CAACC,GAAZ,CAAgBzB,4BAA4B,CAACC,OAAD,CAA5C,EAAuDe,sCAAvD;EACH;AAHoD,CAAd,CAApC"},"metadata":{},"sourceType":"module"}