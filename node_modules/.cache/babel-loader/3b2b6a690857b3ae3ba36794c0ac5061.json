{"ast":null,"code":"\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n\n  if (!options.globals) {\n    return Number(value);\n  }\n\n  return options.globals.Number(value);\n} // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n\n\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if (x > 0 && x % 1 === +0.5 && (x & 1) === 0 || x < 0 && x % 1 === -0.5 && (x & 1) === 1) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, _ref) {\n  let {\n    unsigned\n  } = _ref;\n  let lowerBound, upperBound;\n\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n  return function (value) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(TypeError, `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`, options);\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    x = integerPart(x); // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    } // These will not work great for bitLength of 64, but oh well. See the README for more details.\n\n\n    x = modulo(x, twoToTheBitLength);\n\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, _ref2) {\n  let {\n    unsigned\n  } = _ref2;\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n  return function (value) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(TypeError, `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`, options);\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, {\n  unsigned: false\n});\nexports.octet = createIntegerConversion(8, {\n  unsigned: true\n});\nexports.short = createIntegerConversion(16, {\n  unsigned: false\n});\nexports[\"unsigned short\"] = createIntegerConversion(16, {\n  unsigned: true\n});\nexports.long = createIntegerConversion(32, {\n  unsigned: false\n});\nexports[\"unsigned long\"] = createIntegerConversion(32, {\n  unsigned: true\n});\nexports[\"long long\"] = createLongLongConversion(64, {\n  unsigned: false\n});\nexports[\"unsigned long long\"] = createLongLongConversion(64, {\n  unsigned: true\n});\n\nexports.double = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const x = toNumber(value, options);\n  return x;\n};\n\nexports.float = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const x = exports.DOMString(value, options);\n  let c;\n\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (value === null || typeof value !== \"object\" && typeof value !== \"function\") {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter = Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter = typeof SharedArrayBuffer === \"function\" ? Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get : null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter = Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\n\nexports.DataView = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n}; // Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\n\n\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Uint8Array).prototype, Symbol.toStringTag).get;\n[Int8Array, Int16Array, Int32Array, Uint8Array, Uint16Array, Uint32Array, Uint8ClampedArray, Float32Array, Float64Array].forEach(func => {\n  const {\n    name\n  } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n\n  exports[name] = function (value) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n}); // Common definitions\n\nexports.ArrayBufferView = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.BufferSource = function (value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];","map":{"version":3,"names":["makeException","ErrorType","message","options","globals","name","context","toNumber","value","TypeError","Number","evenRound","x","censorNegativeZero","Math","floor","round","integerPart","n","trunc","sign","modulo","y","signMightNotMatch","createIntegerConversion","bitLength","unsigned","lowerBound","upperBound","twoToTheBitLength","twoToOneLessThanTheBitLength","enforceRange","isFinite","isNaN","clamp","min","max","createLongLongConversion","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","asBigIntN","BigInt","asUintN","asIntN","xBigInt","exports","any","undefined","boolean","Boolean","byte","octet","short","long","double","float","Object","is","fround","DOMString","treatNullAsEmptyString","StringCtor","String","ByteString","c","i","codePointAt","USVString","S","length","U","charCodeAt","push","fromCodePoint","d","a","b","join","object","abByteLengthGetter","getOwnPropertyDescriptor","ArrayBuffer","prototype","get","sabByteLengthGetter","SharedArrayBuffer","isNonSharedArrayBuffer","call","isSharedArrayBuffer","isArrayBufferDetached","Uint8Array","allowShared","dvByteLengthGetter","DataView","e","buffer","typedArrayNameGetter","getPrototypeOf","Symbol","toStringTag","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Uint8ClampedArray","Float32Array","Float64Array","forEach","func","article","test","isView","ArrayBufferView","BufferSource","DOMTimeStamp"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/mongodb-connection-string-url/node_modules/webidl-conversions/lib/index.js"],"sourcesContent":["\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n  if (!options.globals) {\n    return Number(value);\n  }\n  return options.globals.Number(value);\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, { unsigned }) {\n  let lowerBound, upperBound;\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  return x;\n};\n\nexports.float = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = (value, options = {}) => {\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = (value, options = {}) => {\n  const x = exports.DOMString(value, options);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = (value, options = {}) => {\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = (value, options = {}) => {\n  if (value === null || (typeof value !== \"object\" && typeof value !== \"function\")) {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    typeof SharedArrayBuffer === \"function\" ?\n      Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get :\n      null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = (value, options = {}) => {\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (value, options = {}) => {\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n  Object.getPrototypeOf(Uint8Array).prototype,\n  Symbol.toStringTag\n).get;\n[\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray,\n  Float32Array,\n  Float64Array\n].forEach(func => {\n  const { name } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n  exports[name] = (value, options = {}) => {\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (value, options = {}) => {\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n  return value;\n};\n\nexports.BufferSource = (value, options = {}) => {\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}