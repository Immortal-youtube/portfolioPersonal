{"ast":null,"code":"import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = input => {\n  const {\n    region,\n    useFipsEndpoint\n  } = input;\n\n  if (!region) {\n    throw new Error(\"Region is missing\");\n  }\n\n  return { ...input,\n    region: async () => {\n      if (typeof region === \"string\") {\n        return getRealRegion(region);\n      }\n\n      const providedRegion = await region();\n      return getRealRegion(providedRegion);\n    },\n    useFipsEndpoint: async () => {\n      const providedRegion = typeof region === \"string\" ? region : await region();\n\n      if (isFipsRegion(providedRegion)) {\n        return true;\n      }\n\n      return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n    }\n  };\n};","map":{"version":3,"names":["getRealRegion","isFipsRegion","resolveRegionConfig","input","region","useFipsEndpoint","Error","providedRegion","Promise","resolve"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/resolveRegionConfig.js"],"sourcesContent":["import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAC1C,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAA8BF,KAApC;;EACA,IAAI,CAACC,MAAL,EAAa;IACT,MAAM,IAAIE,KAAJ,CAAU,mBAAV,CAAN;EACH;;EACD,OAAO,EACH,GAAGH,KADA;IAEHC,MAAM,EAAE,YAAY;MAChB,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;QAC5B,OAAOJ,aAAa,CAACI,MAAD,CAApB;MACH;;MACD,MAAMG,cAAc,GAAG,MAAMH,MAAM,EAAnC;MACA,OAAOJ,aAAa,CAACO,cAAD,CAApB;IACH,CARE;IASHF,eAAe,EAAE,YAAY;MACzB,MAAME,cAAc,GAAG,OAAOH,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,MAAMA,MAAM,EAAzE;;MACA,IAAIH,YAAY,CAACM,cAAD,CAAhB,EAAkC;QAC9B,OAAO,IAAP;MACH;;MACD,OAAO,OAAOF,eAAP,KAA2B,UAA3B,GAAwCG,OAAO,CAACC,OAAR,CAAgB,CAAC,CAACJ,eAAlB,CAAxC,GAA6EA,eAAe,EAAnG;IACH;EAfE,CAAP;AAiBH,CAtBM"},"metadata":{},"sourceType":"module"}