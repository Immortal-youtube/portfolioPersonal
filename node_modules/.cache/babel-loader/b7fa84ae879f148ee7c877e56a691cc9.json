{"ast":null,"code":"export const resolveParamsForS3 = async endpointParams => {\n  const bucket = endpointParams?.Bucket || \"\";\n\n  if (typeof endpointParams.Bucket === \"string\") {\n    endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n  }\n\n  if (isArnBucketName(bucket)) {\n    if (endpointParams.ForcePathStyle === true) {\n      throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n    }\n  } else if (!isDnsCompatibleBucketName(bucket) || bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\") || bucket.toLowerCase() !== bucket || bucket.length < 3) {\n    endpointParams.ForcePathStyle = true;\n  }\n\n  if (endpointParams.DisableMultiRegionAccessPoints) {\n    endpointParams.disableMultiRegionAccessPoints = true;\n    endpointParams.DisableMRAP = true;\n  }\n\n  return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = bucketName => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = bucketName => {\n  const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n  const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n  const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n\n  if (isArn && !isValidArn) {\n    throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n  }\n\n  return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};","map":{"version":3,"names":["resolveParamsForS3","endpointParams","bucket","Bucket","replace","encodeURIComponent","isArnBucketName","ForcePathStyle","Error","isDnsCompatibleBucketName","indexOf","String","Endpoint","startsWith","toLowerCase","length","DisableMultiRegionAccessPoints","disableMultiRegionAccessPoints","DisableMRAP","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","DOT_PATTERN","S3_HOSTNAME_PATTERN","bucketName","test","arn","partition","service","region","account","typeOrId","split","isArn","isValidArn","filter","Boolean"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/@aws-sdk/middleware-endpoint/dist-es/service-customizations/s3.js"],"sourcesContent":["export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,MAAOC,cAAP,IAA0B;EACxD,MAAMC,MAAM,GAAGD,cAAc,EAAEE,MAAhB,IAA0B,EAAzC;;EACA,IAAI,OAAOF,cAAc,CAACE,MAAtB,KAAiC,QAArC,EAA+C;IAC3CF,cAAc,CAACE,MAAf,GAAwBD,MAAM,CAACE,OAAP,CAAe,IAAf,EAAqBC,kBAAkB,CAAC,GAAD,CAAvC,EAA8CD,OAA9C,CAAsD,KAAtD,EAA6DC,kBAAkB,CAAC,GAAD,CAA/E,CAAxB;EACH;;EACD,IAAIC,eAAe,CAACJ,MAAD,CAAnB,EAA6B;IACzB,IAAID,cAAc,CAACM,cAAf,KAAkC,IAAtC,EAA4C;MACxC,MAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;IACH;EACJ,CAJD,MAKK,IAAI,CAACC,yBAAyB,CAACP,MAAD,CAA1B,IACJA,MAAM,CAACQ,OAAP,CAAe,GAAf,MAAwB,CAAC,CAAzB,IAA8B,CAACC,MAAM,CAACV,cAAc,CAACW,QAAhB,CAAN,CAAgCC,UAAhC,CAA2C,OAA3C,CAD3B,IAELX,MAAM,CAACY,WAAP,OAAyBZ,MAFpB,IAGLA,MAAM,CAACa,MAAP,GAAgB,CAHf,EAGkB;IACnBd,cAAc,CAACM,cAAf,GAAgC,IAAhC;EACH;;EACD,IAAIN,cAAc,CAACe,8BAAnB,EAAmD;IAC/Cf,cAAc,CAACgB,8BAAf,GAAgD,IAAhD;IACAhB,cAAc,CAACiB,WAAf,GAA6B,IAA7B;EACH;;EACD,OAAOjB,cAAP;AACH,CArBM;AAsBP,MAAMkB,cAAc,GAAG,sCAAvB;AACA,MAAMC,kBAAkB,GAAG,eAA3B;AACA,MAAMC,YAAY,GAAG,MAArB;AACA,OAAO,MAAMC,WAAW,GAAG,IAApB;AACP,OAAO,MAAMC,mBAAmB,GAAG,oDAA5B;AACP,OAAO,MAAMd,yBAAyB,GAAIe,UAAD,IAAgBL,cAAc,CAACM,IAAf,CAAoBD,UAApB,KAAmC,CAACJ,kBAAkB,CAACK,IAAnB,CAAwBD,UAAxB,CAApC,IAA2E,CAACH,YAAY,CAACI,IAAb,CAAkBD,UAAlB,CAA9H;AACP,OAAO,MAAMlB,eAAe,GAAIkB,UAAD,IAAgB;EAC3C,MAAM,CAACE,GAAD,EAAMC,SAAN,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,QAA3C,IAAuDP,UAAU,CAACQ,KAAX,CAAiB,GAAjB,CAA7D;EACA,MAAMC,KAAK,GAAGP,GAAG,KAAK,KAAR,IAAiBF,UAAU,CAACQ,KAAX,CAAiB,GAAjB,EAAsBjB,MAAtB,IAAgC,CAA/D;EACA,MAAMmB,UAAU,GAAG,CAACR,GAAD,EAAMC,SAAN,EAAiBC,OAAjB,EAA0BE,OAA1B,EAAmCC,QAAnC,EAA6CI,MAA7C,CAAoDC,OAApD,EAA6DrB,MAA7D,KAAwE,CAA3F;;EACA,IAAIkB,KAAK,IAAI,CAACC,UAAd,EAA0B;IACtB,MAAM,IAAI1B,KAAJ,CAAW,gBAAegB,UAAW,sBAArC,CAAN;EACH;;EACD,OAAOE,GAAG,KAAK,KAAR,IAAiB,CAAC,CAACC,SAAnB,IAAgC,CAAC,CAACC,OAAlC,IAA6C,CAAC,CAACE,OAA/C,IAA0D,CAAC,CAACC,QAAnE;AACH,CARM"},"metadata":{},"sourceType":"module"}