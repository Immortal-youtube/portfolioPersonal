{"ast":null,"code":"import React, { useRef, useEffect, memo } from 'react';\n\nasync function type(node) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  for (const arg of args) {\n    switch (typeof arg) {\n      case 'string':\n        await edit(node, arg);\n        break;\n\n      case 'number':\n        await wait(arg);\n        break;\n\n      case 'function':\n        await arg(node, ...args);\n        break;\n\n      default:\n        await arg;\n    }\n  }\n}\n\nasync function edit(node, text) {\n  const overlap = getOverlap(node.textContent, text);\n  await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\n\nasync function wait(ms) {\n  await new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function perform(node, edits) {\n  let speed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60;\n\n  for (const op of editor(edits)) {\n    op(node);\n    await wait(speed + speed * (Math.random() - 0.5));\n  }\n}\n\nfunction* editor(edits) {\n  for (const edit of edits) {\n    yield node => requestAnimationFrame(() => node.textContent = edit);\n  }\n}\n\nfunction* writer(_ref2) {\n  let [...text] = _ref2;\n  let startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let endIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : text.length;\n\n  while (startIndex < endIndex) {\n    yield text.slice(0, ++startIndex).join('');\n  }\n}\n\nfunction* deleter(_ref3) {\n  let [...text] = _ref3;\n  let startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let endIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : text.length;\n\n  while (endIndex > startIndex) {\n    yield text.slice(0, --endIndex).join('');\n  }\n}\n\nfunction getOverlap(start, _ref4) {\n  let [...end] = _ref4;\n  return [...start, NaN].findIndex((char, i) => end[i] !== char);\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".styles_typicalWrapper__1_Uvh::after {\\n  content: \\\"|\\\";\\n  animation: styles_blink__2CKyC 1s infinite step-start;\\n}\\n\\n@keyframes styles_blink__2CKyC {\\n  50% { opacity: 0; }\\n}\";\nvar styles = {\n  \"typicalWrapper\": \"styles_typicalWrapper__1_Uvh\",\n  \"blink\": \"styles_blink__2CKyC\"\n};\nstyleInject(css);\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Typical = function Typical(_ref) {\n  var steps = _ref.steps,\n      loop = _ref.loop,\n      className = _ref.className,\n      _ref$wrapper = _ref.wrapper,\n      wrapper = _ref$wrapper === undefined ? \"p\" : _ref$wrapper;\n  var typicalRef = useRef(null);\n  var Component = wrapper;\n  var classNames = [styles.typicalWrapper];\n\n  if (className) {\n    classNames.unshift(className);\n  }\n\n  useEffect(function () {\n    if (loop === Infinity) {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(steps), [type]));\n    } else if (typeof loop === \"number\") {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(Array(loop).fill(steps).flat())));\n    } else {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(steps)));\n    }\n  });\n  return React.createElement(Component, {\n    ref: typicalRef,\n    className: classNames.join(' ')\n  });\n};\n\nvar index = memo(Typical);\nexport default index;","map":{"version":3,"mappings":"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","names":["type","node","args","arg","edit","wait","text","overlap","getOverlap","textContent","perform","deleter","writer","ms","Promise","resolve","setTimeout","edits","speed","op","editor","Math","random","requestAnimationFrame","startIndex","endIndex","length","slice","join","start","end","NaN","findIndex","char","i","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Typical","steps","loop","className","wrapper","typicalRef","useRef","Component","classNames","styles","typicalWrapper","unshift","Infinity","current","concat","loopedType","Array","fill","flat","React","memo"],"sources":["C:\\Users\\anshs\\OneDrive\\Documents\\Code\\WebDevelopement\\portfolioPersonal\\node_modules\\react-typical\\node_modules\\@camwiegert\\typical\\typical.js","C:\\Users\\anshs\\OneDrive\\Documents\\Code\\WebDevelopement\\portfolioPersonal\\node_modules\\react-typical\\node_modules\\style-inject\\dist\\style-inject.es.js","C:\\Users\\anshs\\OneDrive\\Documents\\Code\\WebDevelopement\\portfolioPersonal\\node_modules\\react-typical\\src\\index.js"],"sourcesContent":["export async function type(node, ...args) {\n    for (const arg of args) {\n        switch (typeof arg) {\n            case 'string':\n                await edit(node, arg);\n                break;\n            case 'number':\n                await wait(arg);\n                break;\n            case 'function':\n                await arg(node, ...args);\n                break;\n            default:\n                await arg;\n        }\n    }\n}\n\nasync function edit(node, text) {\n    const overlap = getOverlap(node.textContent, text);\n    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\n\nasync function wait(ms) {\n    await new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function perform(node, edits, speed = 60) {\n    for (const op of editor(edits)) {\n        op(node);\n        await wait(speed + speed * (Math.random() - 0.5));\n    }\n}\n\nexport function* editor(edits) {\n    for (const edit of edits) {\n        yield (node) => requestAnimationFrame(() => node.textContent = edit);\n    }\n}\n\nexport function* writer([...text], startIndex = 0, endIndex = text.length) {\n    while (startIndex < endIndex) {\n        yield text.slice(0, ++startIndex).join('');\n    }\n}\n\nexport function* deleter([...text], startIndex = 0, endIndex = text.length) {\n    while (endIndex > startIndex) {\n        yield text.slice(0, --endIndex).join('');\n    }\n}\n\nexport function getOverlap(start, [...end]) {\n    return [...start, NaN].findIndex((char, i) => end[i] !== char);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\nimport React, { useRef, useEffect, memo } from \"react\";\nimport { type, type as loopedType } from \"@camwiegert/typical\";\n\nimport styles from './styles.css'\n\nconst Typical = ({ steps, loop, className, wrapper = \"p\" }) => {\n  const typicalRef = useRef(null);\n  const Component = wrapper;\n  const classNames = [styles.typicalWrapper];\n  \n  if (className) {\n    classNames.unshift(className);\n  }\n\n  useEffect(() => {\n    if (loop === Infinity) {\n      type(typicalRef.current, ...steps, loopedType);\n    } else if (typeof loop === \"number\") {\n      type(\n        typicalRef.current,\n        ...Array(loop)\n          .fill(steps)\n          .flat()\n      );\n    } else {\n      type(typicalRef.current, ...steps);\n    }\n  });\n\n  return <Component ref={typicalRef} className={classNames.join(' ')}/>;\n}\n\nexport default memo(Typical)\n"]},"metadata":{},"sourceType":"module"}