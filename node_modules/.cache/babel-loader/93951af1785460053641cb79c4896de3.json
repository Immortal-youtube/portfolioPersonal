{"ast":null,"code":"const defaultOptions = {\n  preserveOrder: false,\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  removeNSPrefix: false,\n  // remove NS from tag name or attribute name if true\n  allowBooleanAttributes: false,\n  //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseTagValue: true,\n  parseAttributeValue: false,\n  trimValues: true,\n  //Trim string values of tag and attributes\n  cdataPropName: false,\n  numberParseOptions: {\n    hex: true,\n    leadingZeros: true\n  },\n  tagValueProcessor: function (tagName, val) {\n    return val;\n  },\n  attributeValueProcessor: function (attrName, val) {\n    return val;\n  },\n  stopNodes: [],\n  //nested tags will not be parsed even for errors\n  alwaysCreateTextNode: false,\n  isArray: () => false,\n  commentPropName: false,\n  unpairedTags: [],\n  processEntities: true,\n  htmlEntities: false,\n  ignoreDeclaration: false,\n  ignorePiTags: false,\n  transformTagName: false\n};\n\nconst buildOptions = function (options) {\n  return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","map":{"version":3,"names":["defaultOptions","preserveOrder","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","removeNSPrefix","allowBooleanAttributes","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","hex","leadingZeros","tagValueProcessor","tagName","val","attributeValueProcessor","attrName","stopNodes","alwaysCreateTextNode","isArray","commentPropName","unpairedTags","processEntities","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","buildOptions","options","Object","assign","exports"],"sources":["C:/Users/anshs/OneDrive/Documents/Code/WebDevelopement/portfolioPersonal/node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js"],"sourcesContent":["\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;"],"mappings":"AACA,MAAMA,cAAc,GAAG;EACnBC,aAAa,EAAE,KADI;EAEnBC,mBAAmB,EAAE,IAFF;EAGnBC,mBAAmB,EAAE,KAHF;EAInBC,YAAY,EAAE,OAJK;EAKnBC,gBAAgB,EAAE,IALC;EAMnBC,cAAc,EAAE,KANG;EAMI;EACvBC,sBAAsB,EAAE,KAPL;EAOY;EAC/B;EACAC,aAAa,EAAE,IATI;EAUnBC,mBAAmB,EAAE,KAVF;EAWnBC,UAAU,EAAE,IAXO;EAWD;EAClBC,aAAa,EAAE,KAZI;EAanBC,kBAAkB,EAAE;IAClBC,GAAG,EAAE,IADa;IAElBC,YAAY,EAAE;EAFI,CAbD;EAiBnBC,iBAAiB,EAAE,UAASC,OAAT,EAAkBC,GAAlB,EAAuB;IACxC,OAAOA,GAAP;EACD,CAnBkB;EAoBnBC,uBAAuB,EAAE,UAASC,QAAT,EAAmBF,GAAnB,EAAwB;IAC/C,OAAOA,GAAP;EACD,CAtBkB;EAuBnBG,SAAS,EAAE,EAvBQ;EAuBJ;EACfC,oBAAoB,EAAE,KAxBH;EAyBnBC,OAAO,EAAE,MAAM,KAzBI;EA0BnBC,eAAe,EAAE,KA1BE;EA2BnBC,YAAY,EAAE,EA3BK;EA4BnBC,eAAe,EAAE,IA5BE;EA6BnBC,YAAY,EAAE,KA7BK;EA8BnBC,iBAAiB,EAAE,KA9BA;EA+BnBC,YAAY,EAAE,KA/BK;EAgCnBC,gBAAgB,EAAE;AAhCC,CAAvB;;AAmCA,MAAMC,YAAY,GAAG,UAASC,OAAT,EAAkB;EACnC,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjC,cAAlB,EAAkC+B,OAAlC,CAAP;AACH,CAFD;;AAIAG,OAAO,CAACJ,YAAR,GAAuBA,YAAvB;AACAI,OAAO,CAAClC,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}