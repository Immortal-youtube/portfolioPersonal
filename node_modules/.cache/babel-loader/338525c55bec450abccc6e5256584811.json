{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EstimatedDocumentCountOperation = void 0;\n\nconst command_1 = require(\"./command\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass EstimatedDocumentCountOperation extends command_1.CommandOperation {\n  constructor(collection) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n\n  execute(server, session, callback) {\n    const cmd = {\n      count: this.collectionName\n    };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    } // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n\n\n    if (this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response?.n || 0);\n    });\n  }\n\n}\n\nexports.EstimatedDocumentCountOperation = EstimatedDocumentCountOperation;\n(0, operation_1.defineAspects)(EstimatedDocumentCountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.CURSOR_CREATING]);","map":{"version":3,"mappings":";;;;;;;AAKA;;AACA;AAYA;;;AACA,MAAaA,+BAAb,SAAqDC,0BAArD,CAA6E;EAI3EC,YAAYC,UAAZ,EAA+E;IAAA,IAA3CC,OAA2C,uEAAF,EAAE;IAC7E,MAAMD,UAAN,EAAkBC,OAAlB;IACA,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKC,cAAL,GAAsBF,UAAU,CAACE,cAAjC;EACD;;EAEQC,OAAO,CACdC,MADc,EAEdC,OAFc,EAGdC,QAHc,EAGY;IAE1B,MAAMC,GAAG,GAAa;MAAEC,KAAK,EAAE,KAAKN;IAAd,CAAtB;;IAEA,IAAI,OAAO,KAAKD,OAAL,CAAaQ,SAApB,KAAkC,QAAtC,EAAgD;MAC9CF,GAAG,CAACE,SAAJ,GAAgB,KAAKR,OAAL,CAAaQ,SAA7B;IACD,CANyB,CAQ1B;IACA;;;IACA,IAAI,KAAKR,OAAL,CAAaS,OAAb,KAAyBC,SAA7B,EAAwC;MACtCJ,GAAG,CAACG,OAAJ,GAAc,KAAKT,OAAL,CAAaS,OAA3B;IACD;;IAED,MAAME,cAAN,CAAqBR,MAArB,EAA6BC,OAA7B,EAAsCE,GAAtC,EAA2C,CAACM,GAAD,EAAMC,QAAN,KAAkB;MAC3D,IAAID,GAAJ,EAAS;QACPP,QAAQ,CAACO,GAAD,CAAR;QACA;MACD;;MAEDP,QAAQ,CAACK,SAAD,EAAYG,QAAQ,EAAEC,CAAV,IAAe,CAA3B,CAAR;IACD,CAPD;EAQD;;AAnC0E;;AAA7EC;AAsCA,+BAAcnB,+BAAd,EAA+C,CAC7CoB,mBAAOC,cADsC,EAE7CD,mBAAOE,SAFsC,EAG7CF,mBAAOG,eAHsC,CAA/C","names":["EstimatedDocumentCountOperation","command_1","constructor","collection","options","collectionName","execute","server","session","callback","cmd","count","maxTimeMS","comment","undefined","executeCommand","err","response","n","exports","operation_1","READ_OPERATION","RETRYABLE","CURSOR_CREATING"],"sources":["C:\\Users\\anshs\\OneDrive\\Documents\\Code\\WebDevelopement\\portfolioPersonal\\node_modules\\mongodb\\src\\operations\\estimated_document_count.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface EstimatedDocumentCountOptions extends CommandOperationOptions {\n  /**\n   * The maximum amount of time to allow the operation to run.\n   *\n   * This option is sent only if the caller explicitly provides a value. The default is to not send a value.\n   */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class EstimatedDocumentCountOperation extends CommandOperation<number> {\n  override options: EstimatedDocumentCountOptions;\n  collectionName: string;\n\n  constructor(collection: Collection, options: EstimatedDocumentCountOptions = {}) {\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<number>\n  ): void {\n    const cmd: Document = { count: this.collectionName };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response?.n || 0);\n    });\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n"]},"metadata":{},"sourceType":"script"}